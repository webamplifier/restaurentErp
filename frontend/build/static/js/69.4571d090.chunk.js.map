{"version":3,"sources":["screens/Customer/Edit.js"],"names":["Edit","id","useParams","React","useContext","userContext","user","setLoad","useState","name","setName","email","setEmail","mobile","setMobile","address","setAddress","companyName","setCompanyName","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","party_detail","client_detail","company_name","fetchData","className","onSubmit","e","formData","FormData","append","body","status","window","location","origin","toast","error","message","preventDefault","submitData","handleSubmit","class","for","required","value","onChange","target","type","rows","onClick","reload","aria-hidden"],"mappings":"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","file":"static/js/69.4571d090.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport { fetchContext } from '../../context/fetchContext'\r\nimport Select from 'react-select';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport { userContext } from '../../context/UserContext'\r\nimport { url } from 'src/helpers/helpers';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport default function Edit() {\r\n    const { id } = useParams();\r\n    const { user,setLoad } = React.useContext(userContext);\r\n    const [name, setName] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [mobile, setMobile] = React.useState('');\r\n    const [address, setAddress] = React.useState('');\r\n    const [companyName,setCompanyName] = React.useState('')\r\n    \r\n\r\n    const handleSubmit = e => {\r\n        setLoad(true)\r\n        e.preventDefault();\r\n        async function submitData() {\r\n            const formData = new FormData();\r\n            formData.append('name', name);\r\n            formData.append('email', email);\r\n            formData.append('mobile', mobile);            \r\n            formData.append('address', address);\r\n            formData.append('company_name',companyName);\r\n\r\n            const response = await fetch(url + 'updateclient/' + id, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                },\r\n                body: formData\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status === 200) {\r\n                    return window.location = window.location.origin + '/#/customerList'\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n            }\r\n        }\r\n        submitData();\r\n\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setLoad(true)\r\n        async function fetchData() {\r\n            const response = await fetch(url + 'clientById/' + id, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': user.token\r\n                }\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                const party_detail = data.client_detail;\r\n                setName(party_detail.name);\r\n                setEmail(party_detail.email);\r\n                setMobile(party_detail.mobile);\r\n                setAddress(party_detail.address);\r\n                setCompanyName(party_detail.company_name)\r\n\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"container create-page-main-section\">\r\n            <ToastContainer />\r\n            <form onSubmit={e => handleSubmit(e)}>\r\n                <div className='p-sm-5 create-form-field'>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Name:<span className='required-label'>*</span></label>\r\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\r\n                            <input required value={name} onChange={e => setName(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Email:</label>\r\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\r\n                            <input value={email} onChange={e => setEmail(e.target.value)} type=\"email\" class=\"form-control\" id=\"inputPassword\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Mobile No:</label>\r\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\r\n                            <input value={mobile} onChange={e => setMobile(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Tax No:</label>\r\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\r\n                            <input value={companyName} onChange={e => setCompanyName(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\r\n                        </div>\r\n                    </div>\r\n                    \r\n\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm-2 col-form-label\" for=\"exampleFormControlTextarea1\">Address:</label>\r\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\r\n                            <textarea value={address} onChange={e => setAddress(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\r\n                    <button onClick={() => window.location.reload()} type=\"button\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\r\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\r\n                    <button type=\"submit\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\r\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}