{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","assets/images_manual/add.svg","screens/Purchase Entry/Purchase Return/create.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Create","history","useHistory","user","React","useContext","userContext","useState","invoiceNo","setInvoiceNo","purchaseDate","setPurchaseDate","returnDate","setReturnDate","currentParty","setCurrentParty","creditPeriod","currentLos","setCurrentLos","discountType","GST","currentGst","setCurrentGst","currentProduct","setCurrentProduct","currentUnit","setCurrentUnit","costPerUnit","setCostPerUnit","qty","setQty","freeQty","setFreeQty","currentDiscountCriteria","setCurrentDiscountCriteria","discountValue","setDiscountValue","itemDescription","setItemDescription","remarks","setRemarks","allProducts","setAllProducts","allParty","setAllParty","allStates","setAllStates","unitOptions","setUnitOptions","allItems","setAllItems","finalAmount","roundOffTotal","remainAmount","discount_amount_final","amount_after_discount_final","finalDiscountCriteria","setFinalDiscountCriteria","finalDiscountValue","setFinalDiscountValue","paidAmount","setPaidAmount","paymentMethod","setPaymentMethod","totalValue","setTotalValue","taxableAmount","setTaxableAmount","discountAmount","setDiscountAmount","currentEditItem","setCurrentEditItem","perItemAmount","amount_before_tax_item","amount_after_tax_item","tax_amount_item","amount_before_discount","amount_after_discount","discount_amount","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","console","log","item_list","party_list","map","item","value","id","label","name","state_list","toast","error","message","fetchData","parseFloat","Math","round","className","class","for","onChange","e","target","type","required","options","party_value","formData","FormData","append","body","formatDate","purchase_date","fetchDate","warn","src","plus","alt","unit_options_array","primary_unit_id","push","primary_unit","secondary_unit_id","secondary_unit_name","placeholder","htmlFor","readOnly","onClick","new_item_dict","description","unit","cost_per_unit","free","tax","discount_type","total","new_list_edit","index","parseInt","taxable_amount","new_item_list","handleSubmitItem","style","cursor","length","scope","index_value","handleEdit","aria-hidden","new_item","handleDelete","rows","window","location","reload","submitPurchase","header","final","final_array","JSON","stringify","finalSubmit"],"mappings":"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","file":"static/js/24.d08c47bd.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import React from 'react'\r\nimport plus from '../../../assets/images_manual/add.svg'\r\nimport Select from 'react-select';\r\nimport { url, GST, formatDate } from 'src/helpers/helpers';\r\nimport { userContext } from '../../../context/UserContext'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport default function Create() {\r\n    const history = useHistory();\r\n    const { user } = React.useContext(userContext);\r\n    const [invoiceNo, setInvoiceNo] = React.useState('');\r\n    const [purchaseDate, setPurchaseDate] = React.useState('');\r\n    const [returnDate,setReturnDate] = React.useState('');\r\n    const [currentParty, setCurrentParty] = React.useState('');\r\n    const [creditPeriod, setCreditPeriod] = React.useState('');\r\n    const [currentLos, setCurrentLos] = React.useState('');\r\n    const [discountType, setDiscountType] = React.useState('None');\r\n    const [currentGst, setCurrentGst] = React.useState(GST[0]);\r\n    const [currentProduct, setCurrentProduct] = React.useState('');\r\n    const [currentUnit, setCurrentUnit] = React.useState('');\r\n    const [costPerUnit, setCostPerUnit] = React.useState(0);\r\n    const [qty, setQty] = React.useState(0);\r\n    const [freeQty, setFreeQty] = React.useState(0);\r\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\r\n    const [discountValue, setDiscountValue] = React.useState(0);\r\n    const [itemDescription, setItemDescription] = React.useState('');\r\n    const [remarks, setRemarks] = React.useState('');\r\n\r\n\r\n    const [allProducts, setAllProducts] = React.useState([]);\r\n    const [allParty, setAllParty] = React.useState([]);\r\n    const [allStates, setAllStates] = React.useState([]);\r\n    const [unitOptions, setUnitOptions] = React.useState([]);\r\n    const [allItems, setAllItems] = React.useState([]);\r\n\r\n    //final related variables and states\r\n    let finalAmount = 0;\r\n    let roundOffTotal = 0;\r\n    let remainAmount = 0;\r\n    let discount_amount_final = 0;\r\n    let amount_before_discount_final = 0;\r\n    let amount_after_discount_final = 0;\r\n\r\n\r\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\r\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\r\n    const [paidAmount, setPaidAmount] = React.useState(0);\r\n    const [paymentMethod, setPaymentMethod] = React.useState('cash');\r\n    const [totalValue, setTotalValue] = React.useState(0);\r\n    const [taxableAmount,setTaxableAmount] = React.useState(0);\r\n    const [discountAmount,setDiscountAmount] = React.useState(0);\r\n\r\n    //edit related states\r\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\r\n\r\n    //item based variables\r\n    let perItemAmount = 0;\r\n    let amount_before_tax_item = 0;\r\n    let amount_after_tax_item = 0;\r\n    let tax_amount_item = 0;\r\n    let amount_before_discount = 0;\r\n    let amount_after_discount = 0;\r\n    let discount_amount = 0;\r\n\r\n\r\n    const getProductDependency = e => {\r\n        setCurrentProduct(e);\r\n        let unit_options_array = [];\r\n        allProducts.map(item => {\r\n            if (item.value === e.value) {\r\n                if (item.primary_unit_id) {\r\n                    unit_options_array.push({\r\n                        value: item.primary_unit_id,\r\n                        label: `Primary Unit (${item.primary_unit})`\r\n                    })\r\n                }\r\n\r\n                if (item.secondary_unit_id) {\r\n                    unit_options_array.push({\r\n                        value: item.secondary_unit_id,\r\n                        label: `Secondary Unit (${item.secondary_unit_name})`\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        setUnitOptions(unit_options_array)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const response = await fetch(url + 'fetchNeedsPurchase', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                }\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n\r\n                if (data.status === 200) {\r\n                    console.log(data);\r\n                    setAllProducts(data?.item_list)\r\n                    setAllParty(data?.party_list.map(item => {\r\n                        return {\r\n                            value: item.id,\r\n                            label: item.name\r\n                        }\r\n                    }))\r\n                    setAllStates(data?.state_list.map(item => {\r\n                        return {\r\n                            value: item.id,\r\n                            label: item.name\r\n                        }\r\n                    }))\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n\r\n    const calculateTotal = () => {\r\n        if (costPerUnit > 0 && qty > 0 && currentGst) {\r\n            amount_before_tax_item = parseFloat(costPerUnit) * parseFloat(qty); //amount before tax\r\n            tax_amount_item = (amount_before_tax_item / 100) * parseFloat(currentGst) // tax amount\r\n            amount_after_tax_item = amount_before_tax_item + tax_amount_item; // amount after adding tax amount + amount before tax\r\n            perItemAmount = amount_after_tax_item\r\n\r\n            if (discountType == 'Item' || discountType == 'Both') {\r\n                amount_before_discount = amount_after_tax_item;\r\n                if (currentDiscountCriteria == 'percent') {\r\n                    discount_amount = (parseFloat(amount_before_discount) / 100) * parseFloat(discountValue)\r\n                    amount_after_discount = amount_before_discount - discount_amount;\r\n                    perItemAmount = amount_after_discount;\r\n                }\r\n\r\n                if (currentDiscountCriteria == 'amount') {\r\n                    discount_amount = parseFloat(discountValue);\r\n                    amount_after_discount = amount_before_discount - discount_amount;\r\n                    perItemAmount = amount_after_discount;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateTotal()\r\n\r\n    const calculateFinalPrice = () => {\r\n        if (totalValue > 0) {\r\n            if (discountType == 'Bill' || discountType == 'Both') {\r\n                if (finalDiscountCriteria == 'percent') {\r\n                    discount_amount_final = totalValue / 100 * parseFloat(finalDiscountValue);\r\n                    amount_before_discount_final = totalValue;\r\n                    amount_after_discount_final = totalValue - discount_amount_final;\r\n                }\r\n\r\n                if (finalDiscountCriteria == 'amount') {\r\n                    discount_amount_final = parseFloat(finalDiscountValue);\r\n                    amount_before_discount_final = totalValue;\r\n                    amount_after_discount_final = totalValue - discount_amount_final;\r\n                }\r\n                finalAmount = amount_after_discount_final;\r\n                roundOffTotal = Math.round(amount_after_discount_final);\r\n                remainAmount = roundOffTotal - parseFloat(paidAmount);\r\n            } else {\r\n                finalAmount = totalValue\r\n                roundOffTotal = Math.round(finalAmount);\r\n                remainAmount = roundOffTotal - parseFloat(paidAmount);\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateFinalPrice()\r\n\r\n    const handleSubmitItem = () => {\r\n        if (invoiceNo && purchaseDate && currentParty && creditPeriod && currentLos && discountType && currentProduct && currentUnit && costPerUnit && qty && currentGst) {\r\n            let new_item_dict = {\r\n                item: currentProduct,\r\n                description: itemDescription,\r\n                unit: currentUnit,\r\n                cost_per_unit: costPerUnit,\r\n                qty: qty,\r\n                free: freeQty,\r\n                tax: currentGst,\r\n                discount_type: currentDiscountCriteria,\r\n                discountValue,\r\n                total: perItemAmount,\r\n                amount_before_tax_item,\r\n                tax_amount_item,\r\n                amount_after_tax_item,\r\n                amount_before_discount,\r\n                discount_amount,\r\n                amount_after_discount\r\n            };\r\n\r\n            \r\n\r\n            if (currentEditItem) {\r\n                setCurrentEditItem('')\r\n                let new_list_edit = []\r\n                allItems.map((item, index) => {\r\n                    if (index == parseInt(currentEditItem)-1) {\r\n                        \r\n                        new_list_edit.push(new_item_dict)\r\n                    } else {\r\n                        \r\n                        new_list_edit.push(item)\r\n                    }\r\n                })\r\n                let taxable_amount = 0;\r\n                let total = 0;\r\n                let discount_amount = 0;\r\n                new_list_edit.map(item=>{\r\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                    total = parseFloat(total) + parseFloat(item.total);\r\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                })\r\n                setTaxableAmount(taxable_amount);\r\n                setTotalValue(total);\r\n                setDiscountAmount(discount_amount);\r\n                setAllItems(new_list_edit);\r\n            } else {\r\n                let new_item_list = [...allItems, new_item_dict];\r\n\r\n                let taxable_amount = 0;\r\n                let total = 0;\r\n                let discount_amount = 0;\r\n                new_item_list.map(item=>{\r\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                    total = parseFloat(total) + parseFloat(item.total);\r\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                })\r\n                setTaxableAmount(taxable_amount);\r\n                setDiscountAmount(discount_amount);\r\n                setTotalValue(total);\r\n\r\n                setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\r\n                setAllItems(new_item_list);\r\n            }\r\n\r\n\r\n\r\n            setCurrentProduct('');\r\n            setCostPerUnit(0);\r\n            setCurrentUnit('');\r\n            setCostPerUnit(0);\r\n            setQty(0);\r\n            setFreeQty(0);\r\n            setCurrentGst('');\r\n            setCurrentDiscountCriteria('');\r\n            setDiscountValue(0);\r\n            setItemDescription('');\r\n            perItemAmount = 0;\r\n\r\n            amount_before_tax_item = 0;\r\n            amount_after_tax_item = 0;\r\n            tax_amount_item = 0;\r\n            amount_before_discount = 0;\r\n            amount_after_discount = 0;\r\n            discount_amount = 0;\r\n\r\n        } else {\r\n            toast.error('Fill all fields having *')\r\n        }\r\n    }\r\n\r\n    const finalSubmit = () => {\r\n        if (invoiceNo && returnDate && purchaseDate && currentParty && currentLos && allItems.length > 0 && totalValue){\r\n            let header = {\r\n                invoiceNo : invoiceNo,\r\n                purchaseDate : purchaseDate,\r\n                currentParty : currentParty,\r\n                currentLos : currentLos,\r\n                returnDate : returnDate,\r\n            }\r\n            let final = {\r\n                totalValue : totalValue,\r\n                finalAmount : finalAmount,\r\n                roundOffTotal : roundOffTotal,\r\n                paidAmount : paidAmount,\r\n                remainAmount : remainAmount,\r\n                finalDiscountValue : finalDiscountValue,\r\n                finalDiscountCriteria : finalDiscountCriteria,\r\n                remarks : remarks,\r\n                paymentMethod : paymentMethod,\r\n                taxableAmount : taxableAmount,\r\n            }\r\n\r\n            let final_array = [];\r\n\r\n            final_array.push(header);\r\n            final_array.push(final);\r\n\r\n            const formData = new FormData();\r\n            formData.append('final_array',JSON.stringify(final_array));\r\n            formData.append('allItems',JSON.stringify(allItems));\r\n\r\n            async function submitPurchase(){\r\n                const response = await fetch(url + 'create/purchaseReturn',{\r\n                    method : 'POST',\r\n                    headers : {\r\n                        'Authorization' : user.token\r\n                    },\r\n                    body : formData\r\n                });\r\n                if (response.ok == true){\r\n                    const data = await response.json();\r\n\r\n                    if (data.status == 200){\r\n                        history.push('/#/create/purchase')\r\n                    }else{\r\n                        toast.error(data.message);\r\n                    }\r\n                }\r\n            }\r\n\r\n            submitPurchase()\r\n        }else{\r\n            toast.error('Please fill the data with *');\r\n        }\r\n    }\r\n\r\n    const handleEdit = (item, index_value) => {\r\n        setCurrentEditItem(index_value);\r\n        setCurrentProduct(item.item);\r\n        setItemDescription(item.description)\r\n        setCurrentUnit(item.unit);\r\n        setCostPerUnit(item.cost_per_unit);\r\n        setQty(item.qty);\r\n        setFreeQty(item.free);\r\n        setCurrentGst(item.tax);\r\n        setCurrentDiscountCriteria(item.discount_type);\r\n        setDiscountValue(item.discountValue);\r\n        perItemAmount = item.total;\r\n    }\r\n\r\n    const handleDelete = (index_value) => {\r\n        const new_item = [];\r\n        allItems.map((item, index) => {\r\n            if (index != index_value) {\r\n                new_item.push(item)\r\n            }\r\n        })\r\n        setAllItems(new_item);\r\n    }\r\n\r\n    const grabPurchaseDate = (party_value) => {\r\n        setCurrentParty(party_value);\r\n        if (party_value.value && invoiceNo){\r\n            async function fetchDate(){\r\n                const formData = new FormData();\r\n                formData.append('invoice_number',invoiceNo);\r\n                formData.append('party_id',party_value.value);\r\n                const response = await fetch(url + 'getPurchaseDate',{\r\n                    method : 'POST',\r\n                    headers : {\r\n                        'Authorization' : user.token\r\n                    },\r\n                    body : formData\r\n                })\r\n\r\n                if (response.ok === true){\r\n                    const data = await response.json();\r\n                    if (data.status == 200){\r\n                        setPurchaseDate(formatDate(data.data.purchase_date));\r\n                    }else{\r\n                        toast.error(data.message)\r\n                    }\r\n                }\r\n            }\r\n            fetchDate();\r\n        }else{\r\n            toast.warn('Cannot fetch the date automatically provide valid invoice or select party')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container full-size-create-page-main-section\">\r\n            <ToastContainer />\r\n            <form>\r\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\r\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label for=\"invoice-number\">Bill Invoice No.<span className='required-label'>*</span></label>\r\n                            <input value={invoiceNo} onChange={e => setInvoiceNo(e.target.value)} type=\"text\" class=\"form-control\" id=\"invoice-number\" required />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6 row\">\r\n                            <div className=\"col-9\">\r\n                                <label for=\"input-party\">Party<span className='required-label'>*</span></label>\r\n                                <Select options={allParty} value={currentParty} onChange={grabPurchaseDate} />\r\n                            </div>\r\n                            <div className=\"col-3 d-flex align-items-end pb-2\">\r\n                                <img className='img-fluid' src={plus} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label for=\"date\">Purchase Date<span className='required-label'>*</span></label>\r\n                            <input className='form-control' value={purchaseDate} onChange={e => setPurchaseDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" required />\r\n                        </div>\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label for=\"date\">Return Date<span className='required-label'>*</span></label>\r\n                            <input className='form-control' value={returnDate} onChange={e => setReturnDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" required />\r\n                        </div>\r\n                        <div class=\"form-group mt-md-3 col-md-4\">\r\n                            <label for=\"los\">LOS (Location Of Supply)<span className='required-label'>*</span></label>\r\n                            <Select options={allStates} value={currentLos} onChange={setCurrentLos} />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"my-4 form-row\">\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\r\n                            <Select options={allProducts} value={currentProduct} onChange={getProductDependency} />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Item Description</label>\r\n                            <textarea value={itemDescription} onChange={e => setItemDescription(e.target.value)} class=\"form-control\"></textarea>\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Unit<span className='required-label'>*</span></label>\r\n                            <Select options={unitOptions} value={currentUnit} onChange={setCurrentUnit} />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Cost/Unit<span className='required-label'>*</span></label>\r\n                            <input value={costPerUnit} onChange={(e) => setCostPerUnit(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Quantity<span className='required-label'>*</span></label>\r\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Free<span className='required-label'>*</span></label>\r\n                            <input value={freeQty} onChange={e => setFreeQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Tax%<span className='required-label'>*</span></label>\r\n                            \r\n                            <select className='form-control' placeholder='Select tax value' value={currentGst} onChange={e=>setCurrentGst(e.target.value)}>\r\n                                {GST.map(item=><option value={item}>{item}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        {discountType == 'Item' &&\r\n                            <div className='form-group col-md-4'>\r\n                                <label htmlFor=\"\">Discount</label>\r\n                                <div className='m-0 p-0 col-12 row'>\r\n                                    <div className=\"px-0 col-5\">\r\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"p-0 col-7\">\r\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {discountType == 'Both' &&\r\n                            <div className='form-group col-md-4'>\r\n                                <label htmlFor=\"\">Discount</label>\r\n                                <div className='m-0 p-0 col-12 row'>\r\n                                    <div className=\"px-0 col-5\">\r\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"p-0 col-7\">\r\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div class=\"form-group col-md-4 row\">\r\n                            <div class=\"form-group col-9\">\r\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\r\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\r\n                            </div>\r\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\r\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    {allItems.length > 0 && <div className='my-table-responsive'>\r\n                        <table class=\"table mt-4\">\r\n                            <thead class=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Items</th>\r\n                                    <th scope=\"col\">Description</th>\r\n                                    <th scope=\"col\">Unit</th>\r\n                                    <th scope=\"col\">Cost/Unit</th>\r\n                                    <th scope=\"col\">Quantity</th>\r\n                                    <th scope=\"col\">Free</th>\r\n                                    <th scope=\"col\">Tax%</th>\r\n                                    <th>Discount</th>\r\n\r\n                                    <th scope=\"col\">Total</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className='table-borderless'>\r\n                                {allItems.map((item, index) => {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td>\r\n                                                {item.item.label}\r\n                                            </td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>{item.unit.label}</td>\r\n                                            <td>{item.cost_per_unit}</td>\r\n                                            <td>{item.qty}</td>\r\n                                            <td>{item.free}</td>\r\n                                            <td>{item.tax}</td>\r\n                                            <td>{item.discountValue} {item.discount_type}</td>\r\n                                            <td>{item.total}</td>\r\n                                            <td>\r\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index+1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>}\r\n                    <div>\r\n                        <div>\r\n                            taxabale amount:- {taxableAmount && taxableAmount}\r\n                        </div>\r\n                        <div>\r\n                            discount amount:- {discountAmount && discountAmount}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\r\n                        <div class=\"form-group col-md-5\">\r\n                            <label for=\"exampleFormControlTextarea1\">Remarks</label>\r\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\r\n                        </div>\r\n                        <div className='col-md-6'>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input type=\"text\" value={totalValue} readOnly class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            {discountType == 'Bill' && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\r\n                                <div class=\"pr-0 col-md-8 row\">\r\n                                    <div className=\"pr-0 col-5\">\r\n                                        <input class=\"form-control\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"px-0 col-7\">\r\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n\r\n                            {discountType == 'Both' && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\r\n                                <div class=\"pr-0 col-md-8 row\">\r\n                                    <div className=\"pr-0 col-5\">\r\n                                        <input class=\"form-control\" type=\"text\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"px-0 col-7\">\r\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Final Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input readOnly value={finalAmount} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Round Off Total</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input readOnly value={roundOffTotal} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Paid Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input value={paidAmount} onChange={e => setPaidAmount(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            {paidAmount > 0 && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Payment Method</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <select value={paymentMethod} onChange={e => setPaymentMethod(e.target.value)} id=\"input-party\" class=\"form-control\" required>\r\n                                        <option value=\"\">Select payment mode</option>\r\n                                        <option value=\"cash\">Cash</option>\r\n                                        <option value=\"bank\">Bank</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>}\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Remain Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input type=\"text\" value={remainAmount} readOnly class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\r\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\r\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\r\n                    <button type=\"button\" onClick={()=>finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\r\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}