{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","assets/images_manual/add.svg","screens/Purchase Entry/Purchase/Edit.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Edit","id","useParams","useHistory","React","useContext","userContext","user","setLoad","useState","invoiceNo","setInvoiceNo","Date","purchaseDate","setPurchaseDate","currentParty","setCurrentParty","setCreditPeriod","setCurrentLos","discountType","setDiscountType","GST","currentGst","setCurrentGst","currentProduct","setCurrentProduct","currentUnit","setCurrentUnit","costPerUnit","setCostPerUnit","qty","setQty","freeQty","setFreeQty","currentDiscountCriteria","setCurrentDiscountCriteria","discountValue","setDiscountValue","itemDescription","setItemDescription","remarks","setRemarks","allProducts","setAllProducts","allParty","setAllParty","setAllStates","setUnitOptions","allItems","setAllItems","finalAmount","roundOffTotal","remainAmount","discount_amount_final","amount_after_discount_final","finalDiscountCriteria","setFinalDiscountCriteria","finalDiscountValue","setFinalDiscountValue","paidAmount","setPaidAmount","paymentMethod","setPaymentMethod","totalValue","setTotalValue","taxableAmount","setTaxableAmount","discountAmount","setDiscountAmount","currentEditItem","setCurrentEditItem","perItemAmount","amount_before_tax_item","amount_after_tax_item","tax_amount_item","amount_before_discount","amount_after_discount","discount_amount","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","console","log","item_list","party_list","map","item","value","label","name","state_list","toast","error","message","header","final_discount_value","bill_discount_percentage","final_discount_criteria","bill_discount_amount","items","invoice_number","purchase_date","party_id","party_name","credit_period","los_id","los_name","discount_type","midItems","i","length","current_item","discount_value","discount_percent","obj","product_id","product_name","description","unit","unit_id","unit_name","item_id","cost_per_unit","purchase_price","free","free_qty","tax","tax_percent","total","amount_before_tax","tax_amount","amount_after_tax","push","current_total_fetch","taxable_amount","parseFloat","amount_paid","payment_type","fetchData","fetchDetailPurchase","Math","round","className","class","for","onChange","e","target","type","required","options","checked","onClick","unit_options_array","primary_unit_id","primary_unit","secondary_unit_id","secondary_unit_name","placeholder","htmlFor","readOnly","new_item_dict","new_list_edit","index","parseInt","new_item_list","handleSubmitItem","style","cursor","src","plus","alt","scope","index_value","handleEdit","aria-hidden","new_item","handleDelete","rows"],"mappings":"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","file":"static/js/25.cc0ccfcd.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import React from 'react'\r\nimport plus from '../../../assets/images_manual/add.svg'\r\nimport Select from 'react-select';\r\nimport { url, GST, formatDate, formatDateTime } from 'src/helpers/helpers';\r\nimport { userContext } from '../../../context/UserContext'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nexport default function Edit() {\r\n    let { id } = useParams();\r\n    const history = useHistory();\r\n    const { user,setLoad } = React.useContext(userContext);\r\n    const [invoiceNo, setInvoiceNo] = React.useState('');\r\n    const [purchaseDate, setPurchaseDate] = React.useState(new Date());\r\n    const [currentParty, setCurrentParty] = React.useState('');\r\n    const [creditPeriod, setCreditPeriod] = React.useState('');\r\n    const [currentLos, setCurrentLos] = React.useState('');\r\n    const [discountType, setDiscountType] = React.useState('None');\r\n    const [currentGst, setCurrentGst] = React.useState(GST[0]);\r\n    const [currentProduct, setCurrentProduct] = React.useState('');\r\n    const [currentUnit, setCurrentUnit] = React.useState('');\r\n    const [costPerUnit, setCostPerUnit] = React.useState(0);\r\n    const [qty, setQty] = React.useState(0);\r\n    const [freeQty, setFreeQty] = React.useState(0);\r\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\r\n    const [discountValue, setDiscountValue] = React.useState(0);\r\n    const [itemDescription, setItemDescription] = React.useState('');\r\n    const [remarks, setRemarks] = React.useState('');\r\n\r\n\r\n    const [allProducts, setAllProducts] = React.useState([]);\r\n    const [allParty, setAllParty] = React.useState([]);\r\n    const [allStates, setAllStates] = React.useState([]);\r\n    const [unitOptions, setUnitOptions] = React.useState([]);\r\n    const [allItems, setAllItems] = React.useState([]);\r\n\r\n    //final related variables and states\r\n    let finalAmount = 0;\r\n    let roundOffTotal = 0;\r\n    let remainAmount = 0;\r\n    let discount_amount_final = 0;\r\n    let amount_before_discount_final = 0;\r\n    let amount_after_discount_final = 0;\r\n\r\n\r\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\r\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\r\n    const [paidAmount, setPaidAmount] = React.useState(0);\r\n    const [paymentMethod, setPaymentMethod] = React.useState('');\r\n    const [totalValue, setTotalValue] = React.useState(0);\r\n    const [taxableAmount, setTaxableAmount] = React.useState(0);\r\n    const [discountAmount, setDiscountAmount] = React.useState(0);\r\n\r\n    //edit related states\r\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\r\n\r\n    //item based variables\r\n    let perItemAmount = 0;\r\n    let amount_before_tax_item = 0;\r\n    let amount_after_tax_item = 0;\r\n    let tax_amount_item = 0;\r\n    let amount_before_discount = 0;\r\n    let amount_after_discount = 0;\r\n    let discount_amount = 0;\r\n\r\n\r\n    const getProductDependency = e => {\r\n        setCurrentProduct(e);\r\n        let unit_options_array = [];\r\n        allProducts.map(item => {\r\n            if (item.value === e.value) {\r\n                if (item.primary_unit_id) {\r\n                    unit_options_array.push({\r\n                        value: item.primary_unit_id,\r\n                        label: `Primary Unit (${item.primary_unit})`\r\n                    })\r\n                }\r\n\r\n                if (item.secondary_unit_id) {\r\n                    unit_options_array.push({\r\n                        value: item.secondary_unit_id,\r\n                        label: `Secondary Unit (${item.secondary_unit_name})`\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        setUnitOptions(unit_options_array)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setLoad(true)\r\n        async function fetchData() {\r\n            const response = await fetch(url + 'fetchNeedsPurchase', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                }\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status === 200) {\r\n                    console.log(data);\r\n                    setAllProducts(data?.item_list)\r\n                    setAllParty(data?.party_list.map(item => {\r\n                        return {\r\n                            value: item.id,\r\n                            label: item.name\r\n                        }\r\n                    }))\r\n                    setAllStates(data?.state_list.map(item => {\r\n                        return {\r\n                            value: item.id,\r\n                            label: item.name\r\n                        }\r\n                    }))\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n\r\n        async function fetchDetailPurchase() {\r\n            const response = await fetch(url + 'detail/purchase/' + id, {\r\n                headers: {\r\n                    'Authorization': user.token\r\n                }\r\n            });\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status == 200) {\r\n                    \r\n                    console.log(data);\r\n                    let header = data.header;\r\n                    let final_discount_criteria;\r\n                    let final_discount_value = 0;\r\n                    if (header.bill_discount_percentage) {\r\n                        final_discount_criteria = 'percent';\r\n                        final_discount_value = header.bill_discount_percentage;\r\n                    } else if (header.bill_discount_amount) {\r\n                        final_discount_criteria = 'amount';\r\n                        final_discount_value = header.bill_discount_amount\r\n                    }\r\n                    let items = data.items;\r\n                    setInvoiceNo(header.invoice_number);\r\n                    setPurchaseDate(header.purchase_date)\r\n                    setCurrentParty({\r\n                        value: header.party_id,\r\n                        label: header.party_name\r\n                    });\r\n                    setCreditPeriod(header.credit_period);\r\n                    setCurrentLos({\r\n                        value: header.los_id,\r\n                        label: header.los_name\r\n                    });\r\n                    setDiscountType(header.discount_type)\r\n                    let midItems = [];\r\n                    for (let i = 0; i < items.length; i++) {\r\n                        let current_item = items[i];\r\n                        let discount_type = '';\r\n                        let discount_value = 0;\r\n                        if (current_item.discount_percent) {\r\n                            discount_type = 'percent'\r\n                            discount_value = current_item.discount_percent\r\n                        } else if (current_item.discount_amount) {\r\n                            discount_type = 'amount';\r\n                            discount_value = current_item.discount_amount\r\n                        } else {\r\n                            //\r\n                        }\r\n                        let obj = {\r\n                            item: {\r\n                                value: current_item.product_id,\r\n                                label: current_item.product_name\r\n                            },\r\n                            description: current_item.description,\r\n                            unit: {\r\n                                value: current_item.unit_id,\r\n                                label: current_item.unit_name\r\n                            },\r\n                            item_id: current_item.id,\r\n                            cost_per_unit: current_item.purchase_price,\r\n                            qty: current_item.qty,\r\n                            free: current_item.free_qty,\r\n                            tax: current_item.tax_percent,\r\n                            discount_type: discount_type,\r\n                            discountValue: discount_value,\r\n                            total: current_item.total,\r\n                            amount_before_tax_item: current_item.amount_before_tax,\r\n                            tax_amount_item: current_item.tax_amount,\r\n                            amount_after_tax_item: current_item.amount_after_tax,\r\n                            amount_before_discount: current_item.amount_before_discount,\r\n                            discount_amount: current_item.discount_amount,\r\n                            amount_after_discount: current_item.amount_after_discount\r\n                        }\r\n\r\n                        midItems.push(obj)\r\n                    }\r\n\r\n                    setAllItems(midItems);\r\n                    let current_total_fetch = 0\r\n                    let taxable_amount = 0;\r\n                    let discount_amount = 0;\r\n                    midItems.map(item => {\r\n                        current_total_fetch = parseFloat(current_total_fetch) + parseFloat(item.total)\r\n                        taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                        discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                    })\r\n                    setTotalValue(current_total_fetch)\r\n                    setTaxableAmount(taxable_amount)\r\n                    setDiscountAmount(discount_amount)\r\n                    setFinalDiscountValue(final_discount_value)\r\n                    setFinalDiscountCriteria(final_discount_criteria)\r\n                    setPaidAmount(header.amount_paid);\r\n                    setPaymentMethod(header.payment_type)\r\n                    setRemarks(header.remarks)\r\n                } else {\r\n                    toast.error(data.message);\r\n                }\r\n            }\r\n        }\r\n        fetchDetailPurchase()\r\n    }, [])\r\n\r\n\r\n    const calculateTotal = () => {\r\n        if (costPerUnit > 0 && qty > 0 && currentGst) {\r\n            amount_before_tax_item = parseFloat(costPerUnit) * parseFloat(qty); //amount before tax\r\n            tax_amount_item = (amount_before_tax_item / 100) * parseFloat(currentGst) // tax amount\r\n            amount_after_tax_item = amount_before_tax_item + tax_amount_item; // amount after adding tax amount + amount before tax\r\n            perItemAmount = amount_after_tax_item\r\n\r\n            if (discountType == 'Item' || discountType == 'Both') {\r\n                amount_before_discount = amount_after_tax_item;\r\n                if (currentDiscountCriteria == 'percent') {\r\n                    discount_amount = (parseFloat(amount_before_discount) / 100) * parseFloat(discountValue)\r\n                    amount_after_discount = amount_before_discount - discount_amount;\r\n                    perItemAmount = amount_after_discount;\r\n                }\r\n\r\n                if (currentDiscountCriteria == 'amount') {\r\n                    discount_amount = parseFloat(discountValue);\r\n                    amount_after_discount = amount_before_discount - discount_amount;\r\n                    perItemAmount = amount_after_discount;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateTotal()\r\n\r\n    const calculateFinalPrice = () => {\r\n        if (totalValue > 0) {\r\n            if (discountType == 'Bill' || discountType == 'Both') {\r\n                if (finalDiscountCriteria == 'percent') {\r\n                    discount_amount_final = totalValue / 100 * parseFloat(finalDiscountValue);\r\n                    amount_before_discount_final = totalValue;\r\n                    amount_after_discount_final = totalValue - discount_amount_final;\r\n                }\r\n\r\n                if (finalDiscountCriteria == 'amount') {\r\n                    discount_amount_final = parseFloat(finalDiscountValue);\r\n                    amount_before_discount_final = totalValue;\r\n                    amount_after_discount_final = totalValue - discount_amount_final;\r\n                }\r\n                finalAmount = amount_after_discount_final;\r\n                roundOffTotal = Math.round(amount_after_discount_final);\r\n                remainAmount = roundOffTotal - parseFloat(paidAmount);\r\n            } else {\r\n                finalAmount = totalValue\r\n                roundOffTotal = Math.round(finalAmount);\r\n                remainAmount = roundOffTotal - parseFloat(paidAmount);\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateFinalPrice()\r\n\r\n    const handleSubmitItem = () => {\r\n        if (invoiceNo && purchaseDate && currentParty && discountType && currentProduct && currentUnit && qty && currentGst) {\r\n            let new_item_dict = {\r\n                item: currentProduct,\r\n                description: itemDescription,\r\n                unit: currentUnit,\r\n                cost_per_unit: costPerUnit,\r\n                qty: qty,\r\n                free: freeQty,\r\n                tax: currentGst,\r\n                discount_type: currentDiscountCriteria,\r\n                discountValue,\r\n                total: perItemAmount,\r\n                amount_before_tax_item,\r\n                tax_amount_item,\r\n                amount_after_tax_item,\r\n                amount_before_discount,\r\n                discount_amount,\r\n                amount_after_discount\r\n            };\r\n\r\n\r\n\r\n            if (currentEditItem) {\r\n                setCurrentEditItem('')\r\n                let new_list_edit = []\r\n                allItems.map((item, index) => {\r\n                    if (index == parseInt(currentEditItem) - 1) {\r\n\r\n                        new_list_edit.push(new_item_dict)\r\n                    } else {\r\n\r\n                        new_list_edit.push(item)\r\n                    }\r\n                })\r\n                let taxable_amount = 0;\r\n                let total = 0;\r\n                let discount_amount = 0;\r\n                new_list_edit.map(item => {\r\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                    total = parseFloat(total) + parseFloat(item.total);\r\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                })\r\n                setTaxableAmount(taxable_amount);\r\n                setTotalValue(total);\r\n                setDiscountAmount(discount_amount);\r\n                setAllItems(new_list_edit);\r\n            } else {\r\n                let new_item_list = [...allItems, new_item_dict];\r\n\r\n                let taxable_amount = 0;\r\n                let total = 0;\r\n                let discount_amount = 0;\r\n                new_item_list.map(item => {\r\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                    total = parseFloat(total) + parseFloat(item.total);\r\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                })\r\n                setTaxableAmount(taxable_amount);\r\n                setDiscountAmount(discount_amount);\r\n                setTotalValue(total);\r\n\r\n                // setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\r\n                setAllItems(new_item_list);\r\n            }\r\n\r\n\r\n\r\n            setCurrentProduct('');\r\n            setCostPerUnit(0);\r\n            setCurrentUnit('');\r\n            setCostPerUnit(0);\r\n            setQty(0);\r\n            setFreeQty(0);\r\n            setCurrentGst('');\r\n            setCurrentDiscountCriteria('');\r\n            setDiscountValue(0);\r\n            setItemDescription('');\r\n            perItemAmount = 0;\r\n\r\n            amount_before_tax_item = 0;\r\n            amount_after_tax_item = 0;\r\n            tax_amount_item = 0;\r\n            amount_before_discount = 0;\r\n            amount_after_discount = 0;\r\n            discount_amount = 0;\r\n\r\n        } else {\r\n            toast.error('Fill all fields having *')\r\n        }\r\n    }\r\n\r\n    const finalSubmit = () => {\r\n        if (invoiceNo && purchaseDate && currentParty && allItems.length > 0 && totalValue) {\r\n            setLoad(true)\r\n            let header = {\r\n                invoiceNo: invoiceNo,\r\n                purchaseDate: purchaseDate,\r\n                currentParty: currentParty,\r\n                creditPeriod: creditPeriod,\r\n                currentLos: currentLos,\r\n                discountType: discountType\r\n            }\r\n            let final = {\r\n                totalValue: totalValue,\r\n                finalAmount: finalAmount,\r\n                roundOffTotal: roundOffTotal,\r\n                paidAmount: paidAmount,\r\n                remainAmount: remainAmount,\r\n                finalDiscountValue: finalDiscountValue,\r\n                finalDiscountCriteria: finalDiscountCriteria,\r\n                remarks: remarks,\r\n                paymentMethod: paymentMethod,\r\n                taxableAmount: taxableAmount,\r\n                discountAmount: discountAmount\r\n            }\r\n\r\n            let final_array = [];\r\n\r\n            final_array.push(header);\r\n            final_array.push(final);\r\n\r\n            const formData = new FormData();\r\n            formData.append('final_array', JSON.stringify(final_array));\r\n            formData.append('allItems', JSON.stringify(allItems));\r\n\r\n            async function submitPurchase() {\r\n                const response = await fetch(url + 'edit/purchase/' + id, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': user.token\r\n                    },\r\n                    body: formData\r\n                });\r\n                if (response.ok == true) {\r\n                    const data = await response.json();\r\n                    setLoad(false)\r\n                    if (data.status == 200) {\r\n                        history.push('/#/create/purchase')\r\n                    } else {\r\n                        toast.error(data.message);\r\n                    }\r\n                }\r\n            }\r\n\r\n            submitPurchase()\r\n        } else {\r\n            toast.error('Please fill the data with *');\r\n        }\r\n    }\r\n\r\n    const handleEdit = (item, index_value) => {\r\n        setCurrentEditItem(index_value);\r\n        setCurrentProduct(item.item);\r\n        setItemDescription(item.description)\r\n        setCurrentUnit(item.unit);\r\n        setCostPerUnit(item.cost_per_unit);\r\n        setQty(item.qty);\r\n        setFreeQty(item.free);\r\n        setCurrentGst(item.tax);\r\n        setCurrentDiscountCriteria(item.discount_type);\r\n        setDiscountValue(item.discountValue);\r\n        perItemAmount = item.total;\r\n    }\r\n\r\n    // if (allItems.length > 0) {\r\n\r\n    // }\r\n\r\n    const handleDelete = (index_value) => {\r\n        const new_item = [];\r\n        allItems.map((item, index) => {\r\n            if (index != index_value) {\r\n                new_item.push(item)\r\n            }\r\n        })\r\n\r\n        let taxable_amount = 0;\r\n        let total = 0;\r\n        let discount_amount = 0;\r\n        new_item.map(item => {\r\n            taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n            total = parseFloat(total) + parseFloat(item.total);\r\n            discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n        })\r\n        setTaxableAmount(taxable_amount);\r\n        setDiscountAmount(discount_amount);\r\n        setTotalValue(total);\r\n\r\n        setAllItems(new_item);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container full-size-create-page-main-section\">\r\n            <ToastContainer />\r\n            <form>\r\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\r\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label for=\"invoice-number\">Invoice No.<span className='required-label'>*</span></label>\r\n                            <input value={invoiceNo} onChange={e => setInvoiceNo(e.target.value)} type=\"text\" class=\"form-control\" id=\"invoice-number\" required />\r\n                        </div>\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label for=\"date\">Purchase Date<span className='required-label'>*</span></label>\r\n                            {/* <DatePicker value={purchaseDate} onChange={setPurchaseDate} /> */}\r\n                            <input type=\"date\" value={purchaseDate} onChange={e => setPurchaseDate(e.target.value)} className='form-control' />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n\r\n                            <label for=\"input-party\">Party<span className='required-label'>*</span></label>\r\n                            <Select options={allParty} value={currentParty} onChange={setCurrentParty} />\r\n\r\n                        </div>\r\n                        <div class=\"form-group my-md-3 col-md-4\">\r\n                            <div className=\"text-center mb-2 font-weight-bold\">\r\n                                <label for=\"input-party\">Discount Type<span className='required-label'>*</span></label>\r\n                            </div>\r\n                            <div className='row px-3'>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input checked={discountType == 'None' && true} onClick={() => setDiscountType('None')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck1\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n                                        None\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input checked={discountType == 'Item' && true} onClick={() => setDiscountType('Item')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck2\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck2\">\r\n                                        Item\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input checked={discountType == 'Bill' && true} onClick={() => setDiscountType('Bill')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\r\n                                        Bill\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input checked={discountType == 'Both' && true} onClick={() => setDiscountType('Both')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\r\n                                        Both\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"my-4 form-row\">\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\r\n                            <Select options={allProducts} value={currentProduct} onChange={getProductDependency} />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Item Description</label>\r\n                            <textarea value={itemDescription} onChange={e => setItemDescription(e.target.value)} class=\"form-control\"></textarea>\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Cost/Unit<span className='required-label'>*</span></label>\r\n                            <input value={costPerUnit} onChange={(e) => setCostPerUnit(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Quantity<span className='required-label'>*</span></label>\r\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Free<span className='required-label'>*</span></label>\r\n                            <input value={freeQty} onChange={e => setFreeQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Tax%<span className='required-label'>*</span></label>\r\n                            <select className='form-control' placeholder='Select tax value' value={currentGst} onChange={e => setCurrentGst(e.target.value)}>\r\n                                {GST.map(item => <option value={item}>{item}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        {discountType == 'Item' &&\r\n                            <div className='form-group col-md-4'>\r\n                                <label htmlFor=\"\">Discount</label>\r\n                                <div className='m-0 p-0 col-12 row'>\r\n                                    <div className=\"px-0 col-5\">\r\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"p-0 col-7\">\r\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {discountType == 'Both' &&\r\n                            <div className='form-group col-md-4'>\r\n                                <label htmlFor=\"\">Discount</label>\r\n                                <div className='m-0 p-0 col-12 row'>\r\n                                    <div className=\"px-0 col-5\">\r\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"p-0 col-7\">\r\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div class=\"form-group col-md-4 row\">\r\n                            <div class=\"form-group col-9\">\r\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\r\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\r\n                            </div>\r\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\r\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    {allItems.length > 0 && <div className='my-table-responsive'>\r\n                        <table class=\"table mt-4\">\r\n                            <thead class=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Items</th>\r\n                                    <th scope=\"col\">Description</th>\r\n                                    <th scope=\"col\">Cost/Unit</th>\r\n                                    <th scope=\"col\">Quantity</th>\r\n                                    <th scope=\"col\">Free</th>\r\n                                    <th scope=\"col\">Tax%</th>\r\n                                    <th>Discount</th>\r\n\r\n                                    <th scope=\"col\">Total</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className='table-borderless'>\r\n                                {allItems.map((item, index) => {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td>\r\n                                                {item.item.label}\r\n                                            </td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>{item.cost_per_unit}</td>\r\n                                            <td>{item.qty}</td>\r\n                                            <td>{item.free}</td>\r\n                                            <td>{item.tax}</td>\r\n                                            <td>{item.discountValue} {item.discount_type}</td>\r\n                                            <td>{item.total}</td>\r\n                                            <td>\r\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index + 1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>}\r\n                    <div>\r\n                        <div>\r\n                            taxabale amount:- {taxableAmount && taxableAmount}\r\n                        </div>\r\n                        <div>\r\n                            discount amount:- {discountAmount && discountAmount}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\r\n                        <div class=\"form-group col-md-5\">\r\n                            <label for=\"exampleFormControlTextarea1\">Remarks</label>\r\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\r\n                        </div>\r\n                        <div className='col-md-6'>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input type=\"text\" value={totalValue} readOnly class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            {discountType == 'Bill' && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\r\n                                <div class=\"pr-0 col-md-8 row\">\r\n                                    <div className=\"pr-0 col-5\">\r\n                                        <input class=\"form-control\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"px-0 col-7\">\r\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n\r\n                            {discountType == 'Both' && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\r\n                                <div class=\"pr-0 col-md-8 row\">\r\n                                    <div className=\"pr-0 col-5\">\r\n                                        <input class=\"form-control\" type=\"text\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"px-0 col-7\">\r\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Final Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input readOnly value={finalAmount} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Round Off Total</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input readOnly value={roundOffTotal} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Paid Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input value={paidAmount} onChange={e => setPaidAmount(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            {paidAmount > 0 && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Payment Method</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <select value={paymentMethod} onChange={e => setPaymentMethod(e.target.value)} id=\"input-party\" class=\"form-control\" required>\r\n                                        <option value=\"\">Select payment mode</option>\r\n                                        <option value=\"cash\">Cash</option>\r\n                                        <option value=\"bank\">Bank</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>}\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Remain Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input type=\"text\" value={remainAmount} readOnly class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                {/* <div class=\"d-flex justify-content-center create-catagory-btns\">\r\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\r\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\r\n                    <button type=\"button\" onClick={() => finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\r\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\r\n                </div> */}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}