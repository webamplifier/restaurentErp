{"version":3,"sources":["screens/Reports/DayWiseSales.js"],"names":["DayWiseSales","React","useContext","userContext","user","setLoad","useState","purchaseList","setPurchaseList","to","setTo","from","setFrom","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","combined_data","toast","error","message","fetchData","className","htmlFor","type","value","onChange","e","target","onClick","submit","body","formData","FormData","append","catch","err","handleSubmit","xs","lg","items","fields","columnFilter","tableFilter","itemsPerPageSelect","itemsPerPage","hover","sorter","pagination","scopedSlots","item","index","sales_price","amount_before_tax"],"mappings":"6TAMe,SAASA,IAAgB,IAAD,EACVC,IAAMC,WAAWC,KAAlCC,EAD2B,EAC3BA,KAAKC,EADsB,EACtBA,QADsB,EAGKJ,IAAMK,SAAS,IAHpB,mBAG5BC,EAH4B,KAGdC,EAHc,OAIhBP,IAAMK,SAAS,IAJC,mBAI5BG,EAJ4B,KAIzBC,EAJyB,OAKZT,IAAMK,SAAS,IALH,mBAK5BK,EAL4B,KAKvBC,EALuB,KAiEnC,OA1DAX,IAAMY,WAAU,WAAM,4CAElB,8BAAAC,EAAA,sEAC2BC,MAAMC,IAAM,iBAAkB,CACjDC,OAAQ,MACRC,QAAS,CACL,qBAAiBd,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMe,SAJnC,WAQwB,KAPdC,EADV,QAQiBC,GARjB,gCAS2BD,EAASE,OATpC,OAScC,EATd,OAUQlB,GAAQ,GACY,MAAhBkB,EAAKC,OACLhB,EAAgBe,EAAKE,eAErBC,IAAMC,MAAMJ,EAAKK,SAd7B,4CAFkB,sBAClBvB,GAAQ,GADU,mCAqBlBwB,KACD,IAqCC,oCAEI,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,uBAAOC,QAAQ,GAAf,kBACA,uBAAOC,KAAK,OAAOC,MAAOtB,EAAMuB,SAAU,SAAAC,GAAC,OAAEvB,EAAQuB,EAAEC,OAAOH,QAAQH,UAAU,oBAEpF,sBAAKA,UAAU,sBAAf,UACI,uBAAOC,QAAQ,GAAf,gBACA,uBAAOC,KAAK,OAAOC,MAAOxB,EAAIyB,SAAU,SAAAC,GAAC,OAAEzB,EAAMyB,EAAEC,OAAOH,QAAQH,UAAU,oBAGhF,qBAAKA,UAAU,WAAf,SACI,wBAAQA,UAAU,kBAAkBO,QAAS,kBAjDjE,WACI,GAAI5B,GAAME,EAAK,CAAC,IAKG2B,EALJ,uCAKX,8BAAAxB,EAAA,sEAC2BC,MAAMC,IAAM,iBAAiB,CAChDC,OAAS,OACTC,QAAU,CACN,qBAAkBd,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMe,OAE5BoB,KAAOC,IANf,WASwB,KARdpB,EADV,QASiBC,GATjB,iCAU2BD,EAASE,OAVpC,OAUcC,EAVd,OAWQlB,GAAQ,GACW,KAAfkB,EAAKC,OACLhB,EAAgBe,EAAKE,eAErBC,IAAMC,MAAMJ,EAAKK,SAf7B,wBAkBQF,IAAMC,MAAM,8BAlBpB,4CALW,qDACXtB,GAAQ,GACR,IAAMmC,EAAW,IAAIC,SACrBD,EAASE,OAAO,KAAKjC,GACrB+B,EAASE,OAAO,OAAO/B,GAuBvB2B,IAASK,OAAM,SAAAC,GAAG,OAAElB,IAAMC,MAAM,0DAEhCD,IAAMC,MAAM,oCAmBiDkB,IAAjD,2BAIZ,cAAC,IAAD,IACA,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAjB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIC,MAAOzC,EACP0C,OAxFT,CAAC,IAAK,eAAgB,MAAO,YAAa,YAAa,SAyF9CC,cAAY,EACZC,aAAW,EACXC,oBAAkB,EAClBC,aAAc,EACdC,OAAK,EACLC,QAAM,EACNC,YAAU,EACVC,YAAa,CACT,IAAK,SAACC,EAAMC,GAAP,OACD,6BACKA,EAAQ,KAGjB,UAAc,SAACD,EAAKC,GAAN,OACV,6BACKD,EAAKE,eAGd,MAAU,SAACF,EAAKC,GAAN,OACN,6BACKD,EAAKG","file":"static/js/75.cb7245e3.chunk.js","sourcesContent":["import { CBadge, CCard, CCardBody, CCol, CDataTable } from '@coreui/react';\r\nimport React from 'react';\r\nimport { url } from 'src/helpers/helpers';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport { userContext } from '../../context/UserContext'\r\n\r\nexport default function DayWiseSales() {\r\n    const { user,setLoad } = React.useContext(userContext);\r\n    const fields = ['#', 'product_name', 'qty', 'item_rate', 'item_type', 'total'];\r\n    const [purchaseList, setPurchaseList] = React.useState([]);\r\n    const [to,setTo] = React.useState('');\r\n    const [from,setFrom] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        setLoad(true)\r\n        async function fetchData() {\r\n            const response = await fetch(url + 'get-sales-data', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                }\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status === 200) {\r\n                    setPurchaseList(data.combined_data);\r\n                } else {\r\n                    toast.error(data.message);\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    function handleSubmit(){\r\n        if (to && from){\r\n            setLoad(true)\r\n            const formData = new FormData();\r\n            formData.append('to',to);\r\n            formData.append('from',from);\r\n            async function submit(){\r\n                const response = await fetch(url + 'get-sales-data',{\r\n                    method : 'POST',\r\n                    headers : {\r\n                        'Authorization' : user?.token\r\n                    },\r\n                    body : formData\r\n                });\r\n\r\n                if (response.ok === true){\r\n                    const data = await response.json();\r\n                    setLoad(false)\r\n                    if (data.status == 200){\r\n                        setPurchaseList(data.combined_data);\r\n                    }else{\r\n                        toast.error(data.message)\r\n                    }\r\n                }else{\r\n                    toast.error('Oops something went wrong!')\r\n                }\r\n            }\r\n\r\n            submit().catch(err=>toast.error('Internal server error!. Please try again later'))\r\n        }else{\r\n            toast.error('Please fill the to and from date')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-center\">\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label htmlFor=\"\">From</label>\r\n                        <input type=\"date\" value={from} onChange={e=>setFrom(e.target.value)} className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label htmlFor=\"\">To</label>\r\n                        <input type=\"date\" value={to} onChange={e=>setTo(e.target.value)} className=\"form-control\" />\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4\">\r\n                        <button className=\"btn btn-primary\" onClick={()=>handleSubmit()}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ToastContainer />\r\n            <CCol xs=\"12\" lg=\"12\">\r\n                <CCard>\r\n                    <CCardBody>\r\n                        <CDataTable\r\n                            items={purchaseList}\r\n                            fields={fields}\r\n                            columnFilter\r\n                            tableFilter\r\n                            itemsPerPageSelect\r\n                            itemsPerPage={5}\r\n                            hover\r\n                            sorter\r\n                            pagination\r\n                            scopedSlots={{\r\n                                '#': (item, index) => (\r\n                                    <td>\r\n                                        {index + 1}\r\n                                    </td>\r\n                                ),\r\n                                'item_rate' : (item,index) => (\r\n                                    <td>\r\n                                        {item.sales_price}\r\n                                    </td>\r\n                                ),\r\n                                'total' : (item,index) => (\r\n                                    <td>\r\n                                        {item.amount_before_tax}\r\n                                    </td>\r\n                                )\r\n                            \r\n                            }\r\n                            }\r\n                        />\r\n                    </CCardBody>\r\n                </CCard>\r\n            </CCol>\r\n        </section>\r\n    )\r\n}\r\n"],"sourceRoot":""}