{"version":3,"sources":["components/CustomModal.js","screens/Users/Index.js"],"names":["CustomModal","props","modal","setModal","deleteEntry","className","show","onClose","closeButton","onClick","color","Index","React","useContext","userContext","user","setLoad","useState","userList","setUserList","id","setId","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","users_list","fetchData","toast","error","message","deleteData","to","xs","lg","items","fields","columnFilter","tableFilter","itemsPerPageSelect","itemsPerPage","hover","sorter","pagination","scopedSlots","item","index","class","aria-hidden","style","cursor","value"],"mappings":"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","file":"static/js/35.bb25819c.chunk.js","sourcesContent":["import { CButton, CModal, CModalBody, CModalFooter, CModalHeader } from '@coreui/react'\r\nimport React from 'react'\r\n\r\n\r\nexport default function CustomModal(props) {\r\n    const { modal, setModal, deleteEntry } = props;\r\n\r\n    return (\r\n        <div className='delete_modal_box'>\r\n            <CModal\r\n                show={modal}\r\n                onClose={setModal}\r\n            >\r\n                <CModalHeader closeButton>\r\n                </CModalHeader>\r\n                <CModalBody className='delete_modal_body'>\r\n                    <p> Are you sure you want to delete this record ?</p>\r\n                    <div className='btn-div-modal-group delete_modal_Btns'>\r\n                        <button onClick={() => deleteEntry()} className='delete_modal_yes_Btn'>Yes, Approve</button>\r\n                        <button className='btn btn-primary delete_modal_cancel_Btn' color=\"secondary\" onClick={() => setModal(false)}>Cancel</button>\r\n                    </div>\r\n                </CModalBody>\r\n            </CModal>\r\n        </div>\r\n    )\r\n}\r\n","import { CBadge, CCard, CCardBody, CCol, CDataTable } from '@coreui/react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { url } from 'src/helpers/helpers';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport { userContext } from '../../context/UserContext'\r\nimport CustomModal from 'src/components/CustomModal';\r\n\r\n\r\nconst getBadge = status => {\r\n    switch (status) {\r\n        case '1': return 'success'\r\n        case '2': return 'secondary'\r\n        // case 'Pending': return 'warning'\r\n        // case 'Banned': return 'danger'\r\n        default: return 'primary'\r\n    }\r\n}\r\n\r\nexport default function Index() {\r\n    const { user,setLoad } = React.useContext(userContext);\r\n    const fields = ['#', 'username', 'email', 'action'];\r\n    const [userList, setUserList] = React.useState([]);\r\n    const [id, setId] = React.useState(null);\r\n    const [modal, setModal] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        setLoad(true)\r\n        async function fetchData() {\r\n            const response = await fetch(url + 'userlist', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                }\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status === 200) {\r\n                    // deleteProduct\r\n                    setUserList(data?.users_list);\r\n                }\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const deleteEntry = () => {\r\n        setLoad(true)\r\n        async function deleteData() {\r\n            const response = await fetch(url + 'deleteuser/' + id, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                }\r\n            })\r\n\r\n            const data = await response.json();\r\n            setLoad(false)\r\n            if (data.status === 200) {\r\n                setModal(false);\r\n                setId('');\r\n                async function fetchData() {\r\n                    const response = await fetch(url + 'userlist', {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Authorization': user?.token\r\n                        }\r\n                    })\r\n        \r\n                    if (response.ok === true) {\r\n                        const data = await response.json();\r\n        \r\n                        if (data.status === 200) {\r\n                            // deleteProduct\r\n                            setUserList(data?.users_list);\r\n                        }\r\n                    }\r\n                }\r\n                fetchData();\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }\r\n        deleteData();\r\n    }\r\n\r\n    const showModal = value => {\r\n        setId(value);\r\n        setModal(true)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <ToastContainer />\r\n            <CustomModal modal={modal} setModal={setModal} deleteEntry={deleteEntry} />\r\n            <Link to='/create/user'>Create User</Link>\r\n            <CCol xs=\"12\" lg=\"12\">\r\n                <CCard>\r\n                    <CCardBody>\r\n                        <CDataTable\r\n                            items={userList}\r\n                            fields={fields}\r\n                            columnFilter\r\n                            tableFilter\r\n                            itemsPerPageSelect\r\n                            itemsPerPage={5}\r\n                            hover\r\n                            sorter\r\n                            pagination\r\n                            scopedSlots={{\r\n\r\n                                '#':\r\n                                    (item, index) => (\r\n                                        <td>{index + 1}</td>\r\n                                    ),\r\n                                'action': (item) => (\r\n                                    <td>\r\n                                        <Link to={`/edit/user/${item.id}`}><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></Link>\r\n                                        <i style={{ cursor: \"pointer\" }} onClick={() => showModal(item.id)} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                    </td>\r\n                                )\r\n\r\n                            }\r\n                            }\r\n                        />\r\n                    </CCardBody>\r\n                </CCard>\r\n            </CCol>\r\n        </section>\r\n    )\r\n}"],"sourceRoot":""}