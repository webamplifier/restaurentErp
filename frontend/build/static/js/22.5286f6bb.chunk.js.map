{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","assets/images_manual/add.svg","screens/JobCard/Edit.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Edit","history","useHistory","id","useParams","React","useContext","userContext","user","setLoad","useState","invoiceNo","setInvoiceNo","purchaseDate","setPurchaseDate","currentParty","setCurrentParty","editItemId","setEditItemId","suggestedVehicle","setSuggestedVehicle","discountType","setDiscountType","GST","currentGst","setCurrentGst","currentProduct","setCurrentProduct","costPerUnit","setCostPerUnit","qty","setQty","freeQty","setFreeQty","currentDiscountCriteria","setCurrentDiscountCriteria","discountValue","setDiscountValue","itemDescription","setItemDescription","remarks","setRemarks","estimationImage","setEstimationImage","allProducts","setAllProducts","allParty","setAllParty","allItems","setAllItems","allVehicles","setAllVehicles","finalAmount","roundOffTotal","remainAmount","discount_amount_final","amount_after_discount_final","currentVehicle","setCurrentVehicle","finalDiscountCriteria","setFinalDiscountCriteria","finalDiscountValue","setFinalDiscountValue","paidAmount","setPaidAmount","paymentMethod","setPaymentMethod","totalValue","setTotalValue","taxableAmount","setTaxableAmount","discountAmount","setDiscountAmount","currentEditItem","setCurrentEditItem","perItemAmount","amount_before_tax_item","amount_after_tax_item","tax_amount_item","amount_before_discount","amount_after_discount","discount_amount","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","all_vehicles","map","item","value","label","car_name","client_id","product_inventory_based","total_qty","product_name","inventory_id","category_name","price","all_customers","mobile","name","toast","error","message","header","sales_header","items","sales_items","final_discount_value","job_card_number","invoice_number","bill_discount_percentage","final_discount_criteria","bill_discount_amount","job_card_date","invoice_date","client_name","vehicle_id","vehicle_name","discount_type","estimation_proof","midItems","i","length","current_item","discount_value","discount_percent","obj","product_id","product_category_name","description","item_id","cost_per_unit","sales_price","free","free_qty","tax","tax_percent","total","amount_before_tax","tax_amount","amount_after_tax","push","current_total_fetch","taxable_amount","parseFloat","payment_type","fetchData","fetchDetail","Math","round","className","class","for","onChange","e","target","type","required","options","result","result_arr","checked","onClick","JSON","parse","add_ons","placeholder","htmlFor","readOnly","new_item_dict","new_list_edit","index","parseInt","new_item_list","handleSubmitItem","style","cursor","src","plus","alt","scope","index_value","console","log","handleEdit","aria-hidden","new_item","handleDelete","files","href","rows","window","location","reload","submitPurchase","body","formData","currentVehilce","final","final_array","FormData","append","stringify","finalSubmit"],"mappings":"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","file":"static/js/22.5286f6bb.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import React from 'react'\r\nimport plus from '../../assets/images_manual/add.svg'\r\nimport Select from 'react-select';\r\nimport { url, GST, formatDate } from 'src/helpers/helpers';\r\nimport { userContext } from '../../context/UserContext'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nexport default function Edit() {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const { user,setLoad } = React.useContext(userContext);\r\n    const [invoiceNo, setInvoiceNo] = React.useState('');\r\n    const [purchaseDate, setPurchaseDate] = React.useState('');\r\n    const [currentParty, setCurrentParty] = React.useState('');\r\n\r\n    const [editItemId, setEditItemId] = React.useState('');\r\n    const [suggestedVehicle, setSuggestedVehicle] = React.useState([]);\r\n    const [discountType, setDiscountType] = React.useState('None');\r\n    const [currentGst, setCurrentGst] = React.useState(GST[0]);\r\n    const [currentProduct, setCurrentProduct] = React.useState('');\r\n    const [costPerUnit, setCostPerUnit] = React.useState(0);\r\n    const [qty, setQty] = React.useState(0);\r\n    const [freeQty, setFreeQty] = React.useState(0);\r\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\r\n    const [discountValue, setDiscountValue] = React.useState(0);\r\n    const [itemDescription, setItemDescription] = React.useState('');\r\n    const [remarks, setRemarks] = React.useState('');\r\n\r\n    const [estimationImage, setEstimationImage] = React.useState('');\r\n    // Layout toggles\r\n    const [allProducts, setAllProducts] = React.useState([]);\r\n    const [allParty, setAllParty] = React.useState([]);\r\n    const [allItems, setAllItems] = React.useState([]);\r\n    const [allVehicles, setAllVehicles] = React.useState([]);\r\n\r\n    //final related variables and states\r\n    let finalAmount = 0;\r\n    let roundOffTotal = 0;\r\n    let remainAmount = 0;\r\n    let discount_amount_final = 0;\r\n    let amount_before_discount_final = 0;\r\n    let amount_after_discount_final = 0;\r\n\r\n    const [currentVehicle, setCurrentVehicle] = React.useState('');\r\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\r\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\r\n    const [paidAmount, setPaidAmount] = React.useState(0);\r\n    const [paymentMethod, setPaymentMethod] = React.useState('cash');\r\n    const [totalValue, setTotalValue] = React.useState(0);\r\n    const [taxableAmount, setTaxableAmount] = React.useState(0);\r\n    const [discountAmount, setDiscountAmount] = React.useState(0);\r\n\r\n    //edit related states\r\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\r\n\r\n    //item based variables\r\n    let perItemAmount = 0;\r\n    let amount_before_tax_item = 0;\r\n    let amount_after_tax_item = 0;\r\n    let tax_amount_item = 0;\r\n    let amount_before_discount = 0;\r\n    let amount_after_discount = 0;\r\n    let discount_amount = 0;\r\n\r\n    React.useEffect(() => {\r\n        setLoad(true)\r\n        async function fetchData() {\r\n            const response = await fetch(url + 'fetch-needs-job', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                }\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status === 200) {\r\n                    setAllVehicles(data?.all_vehicles.map(item => {\r\n                        return {\r\n                            value: item.id,\r\n                            label: item.car_name,\r\n                            client_id: item.client_id\r\n                        }\r\n                    }))\r\n                    setAllProducts(data.product_inventory_based.map(item => {\r\n                        return {\r\n                            value: item.id,\r\n                            label: item.total_qty ? `${item?.product_name} (${item?.total_qty})` : item.product_name,\r\n                            inventory_id: item?.inventory_id,\r\n                            product_name: item.product_name,\r\n                            category_name: item.category_name,\r\n                            price : item?.price\r\n                        }\r\n                    }));\r\n                    setAllParty(data?.all_customers.map(item => {\r\n                        return {\r\n                            value: item.id,\r\n                            label: item.mobile+ ' - ' + item.name\r\n                        }\r\n                    }))\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n\r\n        async function fetchDetail() {\r\n            setLoad(true)\r\n            const response = await fetch(url + 'jobcard-detail/' + id, {\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                }\r\n            });\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status == 200) {\r\n                    const header = data.sales_header;\r\n                    const items = data.sales_items;\r\n\r\n                    let final_discount_criteria;\r\n                    let final_discount_value = 0;\r\n                    setInvoiceNo(()=>{\r\n                        if (header.status == 1){\r\n                            return header.job_card_number\r\n                        }\r\n\r\n                        if (header.status == 3){\r\n                            return header.invoice_number\r\n                        }\r\n\r\n                    });\r\n                    if (header.bill_discount_percentage) {\r\n                        final_discount_criteria = 'percent';\r\n                        final_discount_value = header.bill_discount_percentage;\r\n                    } else if (header.bill_discount_amount) {\r\n                        final_discount_criteria = 'amount';\r\n                        final_discount_value = header.bill_discount_amount\r\n                    }\r\n                    setPurchaseDate(()=>{\r\n                        if (header.status == 1){\r\n                            return header.job_card_date\r\n                        }\r\n\r\n                        if (header.status == 3){\r\n                            return header.invoice_date\r\n                        }\r\n\r\n                    })\r\n                    setCurrentParty({\r\n                        value: header.client_id,\r\n                        label: header.client_name\r\n                    });\r\n                    setCurrentVehicle({\r\n                        value: header.vehicle_id,\r\n                        label: header.vehicle_name\r\n                    })\r\n                    setDiscountType(header.discount_type)\r\n                    setEstimationImage( url + header.estimation_proof)\r\n                    let midItems = [];\r\n                    for (let i = 0; i < items.length; i++) {\r\n                        let current_item = items[i];\r\n                        let discount_type = '';\r\n                        let discount_value = 0;\r\n                        if (current_item.discount_percent) {\r\n                            discount_type = 'percent'\r\n                            discount_value = current_item.discount_percent\r\n                        } else if (current_item.discount_amount) {\r\n                            discount_type = 'amount';\r\n                            discount_value = current_item.discount_amount\r\n                        } else {\r\n                            //\r\n                        }\r\n                        let obj = {\r\n                            item: {\r\n                                value: current_item.product_id,\r\n                                label: current_item.product_name,\r\n                                product_name: current_item.product_name,\r\n                                category_name: current_item.product_category_name\r\n                            },\r\n                            description: current_item.description,\r\n                            item_id: current_item.id,\r\n                            cost_per_unit: current_item.sales_price,\r\n                            qty: current_item.qty,\r\n                            free: current_item.free_qty,\r\n                            tax: current_item.tax_percent,\r\n                            discount_type: discount_type,\r\n                            discountValue: discount_value,\r\n                            total: current_item.total,\r\n                            amount_before_tax_item: current_item.amount_before_tax,\r\n                            tax_amount_item: current_item.tax_amount,\r\n                            amount_after_tax_item: current_item.amount_after_tax,\r\n                            amount_before_discount: current_item.amount_before_discount,\r\n                            discount_amount: current_item.discount_amount,\r\n                            amount_after_discount: current_item.amount_after_discount\r\n                        }\r\n\r\n                        midItems.push(obj)\r\n                    }\r\n\r\n                    setAllItems(midItems);\r\n                    let current_total_fetch = 0\r\n                    let taxable_amount = 0;\r\n                    let discount_amount = 0;\r\n                    midItems.map(item => {\r\n                        current_total_fetch = parseFloat(current_total_fetch) + parseFloat(item.total)\r\n                        taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                        discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                    })\r\n                    setTotalValue(current_total_fetch)\r\n                    setTaxableAmount(taxable_amount)\r\n                    setDiscountAmount(discount_amount)\r\n                    setFinalDiscountValue(final_discount_value)\r\n                    setFinalDiscountCriteria(final_discount_criteria)\r\n                    setPaymentMethod(header.payment_type)\r\n                    setRemarks(header.remarks)\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchDetail()\r\n    }, [])\r\n\r\n\r\n    const calculateTotal = () => {\r\n        if (costPerUnit > 0 && qty > 0 && currentGst) {\r\n            amount_before_tax_item = parseFloat(costPerUnit) * parseFloat(qty); //amount before tax\r\n            tax_amount_item = (amount_before_tax_item / 100) * parseFloat(currentGst) // tax amount\r\n            amount_after_tax_item = amount_before_tax_item + tax_amount_item; // amount after adding tax amount + amount before tax\r\n            perItemAmount = amount_after_tax_item\r\n\r\n            if (discountType == 'Item' || discountType == 'Both') {\r\n                amount_before_discount = amount_after_tax_item;\r\n                if (currentDiscountCriteria == 'percent') {\r\n                    discount_amount = (parseFloat(amount_before_discount) / 100) * parseFloat(discountValue)\r\n                    amount_after_discount = amount_before_discount - discount_amount;\r\n                    perItemAmount = amount_after_discount;\r\n                }\r\n\r\n                if (currentDiscountCriteria == 'amount') {\r\n                    discount_amount = parseFloat(discountValue);\r\n                    amount_after_discount = amount_before_discount - discount_amount;\r\n                    perItemAmount = amount_after_discount;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateTotal()\r\n\r\n    const calculateFinalPrice = () => {\r\n        if (totalValue > 0) {\r\n            if (discountType == 'Bill' || discountType == 'Both') {\r\n                if (finalDiscountCriteria == 'percent') {\r\n                    discount_amount_final = totalValue / 100 * parseFloat(finalDiscountValue);\r\n                    amount_before_discount_final = totalValue;\r\n                    amount_after_discount_final = totalValue - discount_amount_final;\r\n                }\r\n\r\n                if (finalDiscountCriteria == 'amount') {\r\n                    discount_amount_final = parseFloat(finalDiscountValue);\r\n                    amount_before_discount_final = totalValue;\r\n                    amount_after_discount_final = totalValue - discount_amount_final;\r\n                }\r\n                finalAmount = amount_after_discount_final;\r\n                roundOffTotal = Math.round(amount_after_discount_final);\r\n                remainAmount = roundOffTotal - parseFloat(paidAmount);\r\n            } else {\r\n                finalAmount = totalValue\r\n                roundOffTotal = Math.round(finalAmount);\r\n                remainAmount = roundOffTotal - parseFloat(paidAmount);\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateFinalPrice()\r\n\r\n    const handleSubmitItem = () => {\r\n        if (invoiceNo && purchaseDate && currentParty && discountType && currentProduct && costPerUnit && qty && currentGst) {\r\n            let new_item_dict = {\r\n                item: currentProduct,\r\n                description: itemDescription,\r\n                cost_per_unit: costPerUnit,\r\n                qty: qty,\r\n                free: freeQty,\r\n                tax: currentGst,\r\n                discount_type: currentDiscountCriteria,\r\n                discountValue,\r\n                total: perItemAmount,\r\n                amount_before_tax_item,\r\n                tax_amount_item,\r\n                amount_after_tax_item,\r\n                amount_before_discount,\r\n                discount_amount,\r\n                amount_after_discount\r\n            };\r\n\r\n\r\n\r\n            if (currentEditItem) {\r\n                setCurrentEditItem('')\r\n                let new_list_edit = []\r\n                allItems.map((item, index) => {\r\n                    if (index == parseInt(currentEditItem) - 1) {\r\n                        new_item_dict['item_id'] = editItemId;\r\n                        new_list_edit.push(new_item_dict)\r\n                    } else {\r\n\r\n                        new_list_edit.push(item)\r\n                    }\r\n                })\r\n\r\n                setEditItemId('')\r\n                let taxable_amount = 0;\r\n                let total = 0;\r\n                let discount_amount = 0;\r\n                new_list_edit.map(item => {\r\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                    total = parseFloat(total) + parseFloat(item.total);\r\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                })\r\n                setTaxableAmount(taxable_amount);\r\n                setTotalValue(total);\r\n                setDiscountAmount(discount_amount);\r\n                setAllItems(new_list_edit);\r\n            } else {\r\n                let new_item_list = [...allItems, new_item_dict];\r\n\r\n                let taxable_amount = 0;\r\n                let total = 0;\r\n                let discount_amount = 0;\r\n                new_item_list.map(item => {\r\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                    total = parseFloat(total) + parseFloat(item.total);\r\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                })\r\n                setTaxableAmount(taxable_amount);\r\n                setDiscountAmount(discount_amount);\r\n                setTotalValue(total);\r\n\r\n                setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\r\n                setAllItems(new_item_list);\r\n            }\r\n\r\n\r\n\r\n            setCurrentProduct('');\r\n            setCostPerUnit(0);\r\n            setCostPerUnit(0);\r\n            setQty(0);\r\n            setFreeQty(0);\r\n            setCurrentGst('');\r\n            setCurrentDiscountCriteria('');\r\n            setDiscountValue(0);\r\n            setItemDescription('');\r\n            perItemAmount = 0;\r\n\r\n            amount_before_tax_item = 0;\r\n            amount_after_tax_item = 0;\r\n            tax_amount_item = 0;\r\n            amount_before_discount = 0;\r\n            amount_after_discount = 0;\r\n            discount_amount = 0;\r\n\r\n        } else {\r\n            toast.error('Fill all fields having *')\r\n        }\r\n    }\r\n\r\n    const finalSubmit = () => {\r\n        if (invoiceNo && purchaseDate && currentParty && allItems.length > 0 && totalValue && estimationImage) {\r\n            setLoad(true)\r\n            let header = {\r\n                invoiceNo: invoiceNo,\r\n                purchaseDate: purchaseDate,\r\n                currentParty: currentParty,\r\n                currentVehilce: currentVehicle,\r\n                discountType: discountType\r\n            }\r\n            let final = {\r\n                totalValue: totalValue,\r\n                finalAmount: finalAmount,\r\n                roundOffTotal: roundOffTotal,\r\n                paidAmount: paidAmount,\r\n                remainAmount: remainAmount,\r\n                finalDiscountValue: finalDiscountValue,\r\n                finalDiscountCriteria: finalDiscountCriteria,\r\n                remarks: remarks,\r\n                paymentMethod: paymentMethod,\r\n                taxableAmount: taxableAmount,\r\n                discountAmount: discountAmount,\r\n            }\r\n\r\n            let final_array = [];\r\n\r\n            final_array.push(header);\r\n            final_array.push(final);\r\n\r\n            const formData = new FormData();\r\n            formData.append('final_array', JSON.stringify(final_array));\r\n            formData.append('allItems', JSON.stringify(allItems));\r\n            formData.append('proof_image',estimationImage);\r\n\r\n            async function submitPurchase() {\r\n                const response = await fetch(url + 'update-jobcard/' + id, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': user.token\r\n                    },\r\n                    body: formData\r\n                });\r\n                if (response.ok == true) {\r\n                    const data = await response.json();\r\n                    setLoad(false)\r\n                    if (data.status == 200) {\r\n                        history.push('/#/create/purchase')\r\n                    } else {\r\n                        toast.error(data.message);\r\n                    }\r\n                }\r\n            }\r\n\r\n            submitPurchase()\r\n        } else {\r\n            toast.error('Please fill the data with *');\r\n        }\r\n    }\r\n\r\n    const handleEdit = (item, index_value) => {\r\n        console.log(item)\r\n        setEditItemId(item.item_id)\r\n        setCurrentEditItem(index_value);\r\n        setCurrentProduct(item.item);\r\n        setItemDescription(item.description)\r\n        setCostPerUnit(item.cost_per_unit);\r\n        setQty(item.qty);\r\n        setFreeQty(item.free);\r\n        setCurrentGst(item.tax);\r\n        setCurrentDiscountCriteria(item.discount_type);\r\n        setDiscountValue(item.discountValue);\r\n        perItemAmount = item.total;\r\n    }\r\n\r\n    // if (allItems.length > 0) {\r\n\r\n    // }\r\n\r\n    const handleDelete = (index_value) => {\r\n        const new_item = [];\r\n        allItems.map((item, index) => {\r\n            if (index != index_value) {\r\n                new_item.push(item)\r\n            }\r\n        })\r\n        setAllItems(new_item);\r\n    }\r\n\r\n    function handleLayout(e) {\r\n        setCurrentProduct(e);\r\n        setCurrentEditItem('');\r\n        setCostPerUnit(e?.price)\r\n        let parse_addons = JSON.parse(e.add_ons);\r\n    }\r\n\r\n    function grabVehicle(result) {\r\n        setCurrentParty(result);\r\n        let result_arr = [];\r\n\r\n        allVehicles.map(item => {\r\n            if (item.client_id == result.value) {\r\n                result_arr.push(item)\r\n            }\r\n        })\r\n\r\n        setSuggestedVehicle(result_arr);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container full-size-create-page-main-section\">\r\n            <ToastContainer />\r\n            <form>\r\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\r\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label for=\"invoice-number\">Invoice No.<span className='required-label'>*</span></label>\r\n                            <input value={invoiceNo} onChange={e => setInvoiceNo(e.target.value)} type=\"text\" class=\"form-control\" id=\"invoice-number\" required />\r\n                        </div>\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label for=\"date\">Date<span className='required-label'>*</span></label>\r\n                            <input value={purchaseDate} onChange={e => setPurchaseDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" required />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n\r\n                            <label for=\"input-party\">Client<span className='required-label'>*</span></label>\r\n                            <Select options={allParty} value={currentParty} onChange={grabVehicle} />\r\n\r\n\r\n                            {/* <div className=\"col-3 d-flex align-items-end pb-2\">\r\n                                <img className='img-fluid' src={plus} alt=\"\" />\r\n                            </div> */}\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n\r\n                            <label for=\"input-party\">Vehicle<span className='required-label'>*</span></label>\r\n                            <Select options={suggestedVehicle} value={currentVehicle} onChange={setCurrentVehicle} />\r\n\r\n                            {/* <div className=\"col-3 d-flex align-items-end pb-2\">\r\n                                <img className='img-fluid' src={plus} alt=\"\" />\r\n                            </div> */}\r\n                        </div>\r\n                        <div class=\"form-group my-md-3 col-md-4\">\r\n                            <div className=\"text-center mb-2 font-weight-bold\">\r\n                                <label for=\"input-party\">Discount Type<span className='required-label'>*</span></label>\r\n                            </div>\r\n                            <div className='row px-3'>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input checked={discountType == 'None' && true} onClick={() => setDiscountType('None')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck1\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n                                        None\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input onClick={() => setDiscountType('Item')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck2\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck2\">\r\n                                        Item\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input onClick={() => setDiscountType('Bill')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\r\n                                        Bill\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input onClick={() => setDiscountType('Both')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\r\n                                        Both\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"my-4 form-row\">\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\r\n                            <Select options={allProducts} value={currentProduct} onChange={handleLayout} />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Item Description</label>\r\n                            <textarea value={itemDescription} onChange={e => setItemDescription(e.target.value)} class=\"form-control\"></textarea>\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Cost/Unit<span className='required-label'>*</span></label>\r\n                            <input value={costPerUnit} onChange={(e) => setCostPerUnit(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Quantity<span className='required-label'>*</span></label>\r\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Free<span className='required-label'>*</span></label>\r\n                            <input value={freeQty} onChange={e => setFreeQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Tax%<span className='required-label'>*</span></label>\r\n\r\n                            <select className='form-control' placeholder='Select tax value' value={currentGst} onChange={e => setCurrentGst(e.target.value)}>\r\n                                {GST.map(item => <option value={item}>{item}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        {discountType == 'Item' &&\r\n                            <div className='form-group col-md-4'>\r\n                                <label htmlFor=\"\">Discount</label>\r\n                                <div className='m-0 p-0 col-12 row'>\r\n                                    <div className=\"px-0 col-5\">\r\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"p-0 col-7\">\r\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {discountType == 'Both' &&\r\n                            <div className='form-group col-md-4'>\r\n                                <label htmlFor=\"\">Discount</label>\r\n                                <div className='m-0 p-0 col-12 row'>\r\n                                    <div className=\"px-0 col-5\">\r\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"p-0 col-7\">\r\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div class=\"form-group col-md-4 row\">\r\n                            <div class=\"form-group col-9\">\r\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\r\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\r\n                            </div>\r\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\r\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    {allItems.length > 0 && <div className='my-table-responsive'>\r\n                        <table class=\"table mt-4\">\r\n                            <thead class=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Items</th>\r\n                                    <th scope=\"col\">Description</th>\r\n                                    <th scope=\"col\">Cost/Unit</th>\r\n                                    <th scope=\"col\">Quantity</th>\r\n                                    <th scope=\"col\">Free</th>\r\n                                    <th scope=\"col\">Tax%</th>\r\n                                    <th>Discount</th>\r\n\r\n                                    <th scope=\"col\">Total</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className='table-borderless'>\r\n                                {allItems.map((item, index) => {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td>\r\n                                                {item.item.label}\r\n                                            </td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>{item.cost_per_unit}</td>\r\n                                            <td>{item.qty}</td>\r\n                                            <td>{item.free}</td>\r\n                                            <td>{item.tax}</td>\r\n                                            <td>{item.discountValue} {item.discount_type}</td>\r\n                                            <td>{item.total}</td>\r\n                                            <td>\r\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index + 1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>}\r\n                    <div>\r\n                        <div>\r\n                            taxabale amount:- {taxableAmount && taxableAmount}\r\n                        </div>\r\n                        <div>\r\n                            discount amount:- {discountAmount && discountAmount}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\r\n                        <div class=\"col-md-5\">\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\">Upload Estimation Image *</label>\r\n                                <input type=\"file\" onChange={e=>setEstimationImage(e.target.files[0])} className='form-control' />\r\n                            </div>\r\n                            {estimationImage && <a href={estimationImage} target=\"_blank\" ><img src={estimationImage}  /></a>}\r\n                            <div className=\"form-group \">\r\n                                <label for=\"exampleFormControlTextarea1\">Remarks</label>\r\n                                <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-md-6'>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input type=\"text\" value={totalValue} readOnly class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            {discountType == 'Bill' && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\r\n                                <div class=\"pr-0 col-md-8 row\">\r\n                                    <div className=\"pr-0 col-5\">\r\n                                        <input class=\"form-control\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"px-0 col-7\">\r\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n\r\n                            {discountType == 'Both' && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\r\n                                <div class=\"pr-0 col-md-8 row\">\r\n                                    <div className=\"pr-0 col-5\">\r\n                                        <input class=\"form-control\" type=\"text\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"px-0 col-7\">\r\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Final Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input readOnly value={finalAmount} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Round Off Total</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input readOnly value={roundOffTotal} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Paid Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input value={paidAmount} onChange={e => setPaidAmount(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            {paidAmount > 0 && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Payment Method</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <select value={paymentMethod} onChange={e => setPaymentMethod(e.target.value)} id=\"input-party\" class=\"form-control\" required>\r\n                                        <option value=\"\">Select payment mode</option>\r\n                                        <option value=\"cash\">Cash</option>\r\n                                        <option value=\"bank\">Bank</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>}\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Remain Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input type=\"text\" value={remainAmount} readOnly class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\r\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\r\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\r\n                    <button type=\"button\" onClick={() => finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\r\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}