{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","assets/images_manual/add.svg","screens/Sales Entry/Create.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Create","history","useHistory","React","useContext","userContext","user","setLoad","useState","invoiceNo","setInvoiceNo","purchaseDate","setPurchaseDate","currentParty","setCurrentParty","suggestedVehicle","setSuggestedVehicle","discountType","setDiscountType","GST","currentGst","setCurrentGst","currentProduct","setCurrentProduct","costPerUnit","setCostPerUnit","qty","setQty","freeQty","setFreeQty","currentDiscountCriteria","setCurrentDiscountCriteria","discountValue","setDiscountValue","itemDescription","setItemDescription","remarks","setRemarks","allProducts","setAllProducts","allParty","setAllParty","allItems","setAllItems","allVehicles","setAllVehicles","finalAmount","roundOffTotal","remainAmount","discount_amount_final","amount_after_discount_final","currentVehicle","setCurrentVehicle","finalDiscountCriteria","setFinalDiscountCriteria","finalDiscountValue","setFinalDiscountValue","paidAmount","setPaidAmount","paymentMethod","setPaymentMethod","totalValue","setTotalValue","taxableAmount","setTaxableAmount","discountAmount","setDiscountAmount","currentEditItem","setCurrentEditItem","perItemAmount","amount_before_tax_item","amount_after_tax_item","tax_amount_item","amount_before_discount","amount_after_discount","discount_amount","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","console","log","all_vehicles","map","item","value","id","label","car_name","client_id","product_inventory_based","total_qty","product_name","inventory_id","category_name","price","new_invoice","all_customers","mobile","name","toast","error","message","fetchData","parseFloat","Math","round","className","class","for","onChange","e","target","type","required","options","result","result_arr","push","checked","onClick","JSON","parse","add_ons","placeholder","htmlFor","readOnly","new_item_dict","description","cost_per_unit","free","tax","discount_type","total","new_list_edit","index","parseInt","taxable_amount","new_item_list","handleSubmitItem","style","cursor","src","plus","alt","length","scope","index_value","handleEdit","aria-hidden","new_item","handleDelete","rows","window","location","reload","submitPurchase","body","formData","header","currentVehilce","final","final_array","FormData","append","stringify","finalSubmit"],"mappings":"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","file":"static/js/27.a701f5ca.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import React from 'react'\r\nimport plus from '../../assets/images_manual/add.svg'\r\nimport Select from 'react-select';\r\nimport { url, GST } from 'src/helpers/helpers';\r\nimport { userContext } from '../../context/UserContext'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ManualLoader from 'src/components/ManualLoader';\r\n\r\nexport default function Create() {\r\n    const history = useHistory();\r\n    const { user,setLoad } = React.useContext(userContext);\r\n    const [invoiceNo, setInvoiceNo] = React.useState('');\r\n    const [purchaseDate, setPurchaseDate] = React.useState('');\r\n    const [currentParty, setCurrentParty] = React.useState('');\r\n    \r\n    const [suggestedVehicle,setSuggestedVehicle] = React.useState([]);\r\n    const [discountType, setDiscountType] = React.useState('None');\r\n    const [currentGst, setCurrentGst] = React.useState(GST[0]);\r\n    const [currentProduct, setCurrentProduct] = React.useState('');\r\n    const [costPerUnit, setCostPerUnit] = React.useState(0);\r\n    const [qty, setQty] = React.useState(0);\r\n    const [freeQty, setFreeQty] = React.useState(0);\r\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\r\n    const [discountValue, setDiscountValue] = React.useState(0);\r\n    const [itemDescription, setItemDescription] = React.useState('');\r\n    const [remarks, setRemarks] = React.useState('');\r\n\r\n    // Layout toggles\r\n    const [allProducts, setAllProducts] = React.useState([]);\r\n    const [allParty, setAllParty] = React.useState([]);\r\n    const [allItems, setAllItems] = React.useState([]);\r\n    const [allVehicles,setAllVehicles] = React.useState([]);\r\n\r\n    //final related variables and states\r\n    let finalAmount = 0;\r\n    let roundOffTotal = 0;\r\n    let remainAmount = 0;\r\n    let discount_amount_final = 0;\r\n    let amount_before_discount_final = 0;\r\n    let amount_after_discount_final = 0;\r\n\r\n    const [currentVehicle,setCurrentVehicle] = React.useState('');\r\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\r\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\r\n    const [paidAmount, setPaidAmount] = React.useState(0);\r\n    const [paymentMethod, setPaymentMethod] = React.useState('cash');\r\n    const [totalValue, setTotalValue] = React.useState(0);\r\n    const [taxableAmount, setTaxableAmount] = React.useState(0);\r\n    const [discountAmount, setDiscountAmount] = React.useState(0);\r\n\r\n    //edit related states\r\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\r\n\r\n    //item based variables\r\n    let perItemAmount = 0;\r\n    let amount_before_tax_item = 0;\r\n    let amount_after_tax_item = 0;\r\n    let tax_amount_item = 0;\r\n    let amount_before_discount = 0;\r\n    let amount_after_discount = 0;\r\n    let discount_amount = 0;\r\n\r\n    React.useEffect(() => {\r\n        setLoad(true)\r\n        async function fetchData() {\r\n            const response = await fetch(url + 'fetch-needs-estimation', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                }\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status === 200) {\r\n                    console.log(data);\r\n                    setAllVehicles(data?.all_vehicles.map(item=>{\r\n                        return {\r\n                            value : item.id,\r\n                            label : item.car_name,\r\n                            client_id : item.client_id\r\n                        }\r\n                    }))\r\n                    setAllProducts(data.product_inventory_based.map(item => {\r\n                        return {\r\n                            value: item.id,\r\n                            label: item.total_qty ? `${item?.product_name} (${item?.total_qty})` : item.product_name,\r\n                            inventory_id: item?.inventory_id,\r\n                            product_name : item.product_name,\r\n                            category_name : item.category_name,\r\n                            price : item?.price\r\n                        }\r\n                    }));\r\n                    setInvoiceNo(data.new_invoice)\r\n                    setAllParty(data?.all_customers.map(item => {\r\n                        return {\r\n                            value: item.id,\r\n                            label: item.mobile+ ' - ' + item.name\r\n                        }\r\n                    }))\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n\r\n    const calculateTotal = () => {\r\n        if (costPerUnit > 0 && qty > 0 && currentGst) {\r\n            amount_before_tax_item = parseFloat(costPerUnit) * parseFloat(qty); //amount before tax\r\n            tax_amount_item = (amount_before_tax_item / 100) * parseFloat(currentGst) // tax amount\r\n            amount_after_tax_item = amount_before_tax_item + tax_amount_item; // amount after adding tax amount + amount before tax\r\n            perItemAmount = amount_after_tax_item\r\n\r\n            if (discountType == 'Item' || discountType == 'Both') {\r\n                amount_before_discount = amount_after_tax_item;\r\n                if (currentDiscountCriteria == 'percent') {\r\n                    discount_amount = (parseFloat(amount_before_discount) / 100) * parseFloat(discountValue)\r\n                    amount_after_discount = amount_before_discount - discount_amount;\r\n                    perItemAmount = amount_after_discount;\r\n                }\r\n\r\n                if (currentDiscountCriteria == 'amount') {\r\n                    discount_amount = parseFloat(discountValue);\r\n                    amount_after_discount = amount_before_discount - discount_amount;\r\n                    perItemAmount = amount_after_discount;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateTotal()\r\n\r\n    const calculateFinalPrice = () => {\r\n        if (totalValue > 0) {\r\n            if (discountType == 'Bill' || discountType == 'Both') {\r\n                if (finalDiscountCriteria == 'percent') {\r\n                    discount_amount_final = totalValue / 100 * parseFloat(finalDiscountValue);\r\n                    amount_before_discount_final = totalValue;\r\n                    amount_after_discount_final = totalValue - discount_amount_final;\r\n                }\r\n\r\n                if (finalDiscountCriteria == 'amount') {\r\n                    discount_amount_final = parseFloat(finalDiscountValue);\r\n                    amount_before_discount_final = totalValue;\r\n                    amount_after_discount_final = totalValue - discount_amount_final;\r\n                }\r\n                finalAmount = amount_after_discount_final;\r\n                roundOffTotal = Math.round(amount_after_discount_final);\r\n                remainAmount = roundOffTotal - parseFloat(paidAmount);\r\n            } else {\r\n                finalAmount = totalValue\r\n                roundOffTotal = Math.round(finalAmount);\r\n                remainAmount = roundOffTotal - parseFloat(paidAmount);\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateFinalPrice()\r\n\r\n    const handleSubmitItem = () => {\r\n        if (invoiceNo && purchaseDate && currentParty  && discountType && currentProduct && costPerUnit && qty && currentGst) {\r\n            let new_item_dict = {\r\n                item: currentProduct,\r\n                description: itemDescription,\r\n                cost_per_unit: costPerUnit,\r\n                qty: qty,\r\n                free: freeQty,\r\n                tax: currentGst,\r\n                discount_type: currentDiscountCriteria,\r\n                discountValue,\r\n                total: perItemAmount,\r\n                amount_before_tax_item,\r\n                tax_amount_item,\r\n                amount_after_tax_item,\r\n                amount_before_discount,\r\n                discount_amount,\r\n                amount_after_discount\r\n            };\r\n\r\n\r\n\r\n            if (currentEditItem) {\r\n                setCurrentEditItem('')\r\n                let new_list_edit = []\r\n                allItems.map((item, index) => {\r\n                    if (index == parseInt(currentEditItem) - 1) {\r\n\r\n                        new_list_edit.push(new_item_dict)\r\n                    } else {\r\n\r\n                        new_list_edit.push(item)\r\n                    }\r\n                })\r\n                let taxable_amount = 0;\r\n                let total = 0;\r\n                let discount_amount = 0;\r\n                new_list_edit.map(item => {\r\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                    total = parseFloat(total) + parseFloat(item.total);\r\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                })\r\n                setTaxableAmount(taxable_amount);\r\n                setTotalValue(total);\r\n                setDiscountAmount(discount_amount);\r\n                setAllItems(new_list_edit);\r\n            } else {\r\n                let new_item_list = [...allItems, new_item_dict];\r\n\r\n                let taxable_amount = 0;\r\n                let total = 0;\r\n                let discount_amount = 0;\r\n                new_item_list.map(item => {\r\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                    total = parseFloat(total) + parseFloat(item.total);\r\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                })\r\n                setTaxableAmount(taxable_amount);\r\n                setDiscountAmount(discount_amount);\r\n                setTotalValue(total);\r\n\r\n                setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\r\n                setAllItems(new_item_list);\r\n            }\r\n\r\n\r\n\r\n            setCurrentProduct('');\r\n            setCostPerUnit(0);\r\n            setCostPerUnit(0);\r\n            setQty(0);\r\n            setFreeQty(0);\r\n            setCurrentGst('');\r\n            setCurrentDiscountCriteria('');\r\n            setDiscountValue(0);\r\n            setItemDescription('');\r\n            perItemAmount = 0;\r\n\r\n            amount_before_tax_item = 0;\r\n            amount_after_tax_item = 0;\r\n            tax_amount_item = 0;\r\n            amount_before_discount = 0;\r\n            amount_after_discount = 0;\r\n            discount_amount = 0;\r\n\r\n        } else {\r\n            toast.error('Fill all fields having *')\r\n        }\r\n    }\r\n\r\n    const finalSubmit = () => {\r\n        if (invoiceNo && purchaseDate && currentParty  && allItems.length > 0 && totalValue) {\r\n            setLoad(true)\r\n            let header = {\r\n                invoiceNo: invoiceNo,\r\n                purchaseDate: purchaseDate,\r\n                currentParty: currentParty,\r\n                currentVehilce : currentVehicle,\r\n                discountType: discountType\r\n            }\r\n            let final = {\r\n                totalValue: totalValue,\r\n                finalAmount: finalAmount,\r\n                roundOffTotal: roundOffTotal,\r\n                paidAmount: paidAmount,\r\n                remainAmount: remainAmount,\r\n                finalDiscountValue: finalDiscountValue,\r\n                finalDiscountCriteria: finalDiscountCriteria,\r\n                remarks: remarks,\r\n                paymentMethod: paymentMethod,\r\n                taxableAmount: taxableAmount,\r\n                discountAmount: discountAmount,\r\n            }\r\n\r\n            let final_array = [];\r\n\r\n            final_array.push(header);\r\n            final_array.push(final);\r\n\r\n            const formData = new FormData();\r\n            formData.append('final_array', JSON.stringify(final_array));\r\n            formData.append('allItems', JSON.stringify(allItems));\r\n\r\n            async function submitPurchase() {\r\n                const response = await fetch(url + 'create-estimation', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': user.token\r\n                    },\r\n                    body: formData\r\n                });\r\n                if (response.ok == true) {\r\n                    const data = await response.json();\r\n                    setLoad(false)\r\n                    if (data.status == 200) {\r\n                        history.push('/#/create/purchase')\r\n                    } else {\r\n                        toast.error(data.message);\r\n                    }\r\n                }\r\n            }\r\n\r\n            submitPurchase()\r\n        } else {\r\n            toast.error('Please fill the data with *');\r\n        }\r\n    }\r\n\r\n    const handleEdit = (item, index_value) => {\r\n        console.log(item)\r\n        setCurrentEditItem(index_value);\r\n        setCurrentProduct(item.item);\r\n        setItemDescription(item.description)\r\n        setCostPerUnit(item.cost_per_unit);\r\n        setQty(item.qty);\r\n        setFreeQty(item.free);\r\n        setCurrentGst(item.tax);\r\n        setCurrentDiscountCriteria(item.discount_type);\r\n        setDiscountValue(item.discountValue);\r\n        perItemAmount = item.total;\r\n    }\r\n\r\n    // if (allItems.length > 0) {\r\n\r\n    // }\r\n\r\n    const handleDelete = (index_value) => {\r\n        const new_item = [];\r\n        allItems.map((item, index) => {\r\n            if (index != index_value) {\r\n                new_item.push(item)\r\n            }\r\n        })\r\n        setAllItems(new_item);\r\n    }\r\n\r\n    function handleLayout(e) {\r\n        setCurrentProduct(e);\r\n        setCostPerUnit(e?.price)\r\n        setCurrentEditItem('');\r\n        let parse_addons = JSON.parse(e.add_ons);\r\n    }\r\n\r\n    function grabVehicle(result){\r\n        setCurrentParty(result);\r\n        let result_arr = [];\r\n\r\n        allVehicles.map(item=>{\r\n            if (item.client_id == result.value){\r\n                result_arr.push(item)\r\n            }\r\n        })\r\n\r\n        setSuggestedVehicle(result_arr);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container full-size-create-page-main-section\">\r\n            <ToastContainer />\r\n            <form>\r\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\r\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label for=\"invoice-number\">Estimation No.<span className='required-label'>*</span></label>\r\n                            <input value={invoiceNo} onChange={e => setInvoiceNo(e.target.value)} type=\"text\" class=\"form-control\" id=\"invoice-number\" required />\r\n                        </div>\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label for=\"date\">Date<span className='required-label'>*</span></label>\r\n                            <input value={purchaseDate} onChange={e => setPurchaseDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" required />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n\r\n                            <label for=\"input-party\">Client<span className='required-label'>*</span></label>\r\n                            <Select options={allParty} value={currentParty} onChange={grabVehicle} />\r\n\r\n\r\n                            {/* <div className=\"col-3 d-flex align-items-end pb-2\">\r\n                                <img className='img-fluid' src={plus} alt=\"\" />\r\n                            </div> */}\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n\r\n                            <label for=\"input-party\">Vehicle<span className='required-label'>*</span></label>\r\n                            <Select options={suggestedVehicle} value={currentVehicle} onChange={setCurrentVehicle} />\r\n\r\n                            {/* <div className=\"col-3 d-flex align-items-end pb-2\">\r\n                                <img className='img-fluid' src={plus} alt=\"\" />\r\n                            </div> */}\r\n                        </div>\r\n                        <div class=\"form-group my-md-3 col-md-4\">\r\n                            <div className=\"text-center mb-2 font-weight-bold\">\r\n                                <label for=\"input-party\">Discount Type<span className='required-label'>*</span></label>\r\n                            </div>\r\n                            <div className='row px-3'>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input checked={discountType == 'None' && true} onClick={() => setDiscountType('None')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck1\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n                                        None\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input onClick={() => setDiscountType('Item')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck2\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck2\">\r\n                                        Item\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input onClick={() => setDiscountType('Bill')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\r\n                                        Bill\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input onClick={() => setDiscountType('Both')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\r\n                                        Both\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"my-4 form-row\">\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\r\n                            <Select options={allProducts} value={currentProduct} onChange={handleLayout} />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Item Description</label>\r\n                            <textarea value={itemDescription} onChange={e => setItemDescription(e.target.value)} class=\"form-control\"></textarea>\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Cost/Unit<span className='required-label'>*</span></label>\r\n                            <input value={costPerUnit} onChange={(e) => setCostPerUnit(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Quantity<span className='required-label'>*</span></label>\r\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Free<span className='required-label'>*</span></label>\r\n                            <input value={freeQty} onChange={e => setFreeQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Tax%<span className='required-label'>*</span></label>\r\n\r\n                            <select className='form-control' placeholder='Select tax value' value={currentGst} onChange={e => setCurrentGst(e.target.value)}>\r\n                                {GST.map(item => <option value={item}>{item}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        {discountType == 'Item' &&\r\n                            <div className='form-group col-md-4'>\r\n                                <label htmlFor=\"\">Discount</label>\r\n                                <div className='m-0 p-0 col-12 row'>\r\n                                    <div className=\"px-0 col-5\">\r\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"p-0 col-7\">\r\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {discountType == 'Both' &&\r\n                            <div className='form-group col-md-4'>\r\n                                <label htmlFor=\"\">Discount</label>\r\n                                <div className='m-0 p-0 col-12 row'>\r\n                                    <div className=\"px-0 col-5\">\r\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"p-0 col-7\">\r\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div class=\"form-group col-md-4 row\">\r\n                            <div class=\"form-group col-9\">\r\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\r\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\r\n                            </div>\r\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\r\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    {allItems.length > 0 && <div className='my-table-responsive'>\r\n                        <table class=\"table mt-4\">\r\n                            <thead class=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Items</th>\r\n                                    <th scope=\"col\">Description</th>\r\n                                    <th scope=\"col\">Cost/Unit</th>\r\n                                    <th scope=\"col\">Quantity</th>\r\n                                    <th scope=\"col\">Free</th>\r\n                                    <th scope=\"col\">Tax%</th>\r\n                                    <th>Discount</th>\r\n\r\n                                    <th scope=\"col\">Total</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className='table-borderless'>\r\n                                {allItems.map((item, index) => {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td>\r\n                                                {item.item.product_name}\r\n                                            </td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>{item.cost_per_unit}</td>\r\n                                            <td>{item.qty}</td>\r\n                                            <td>{item.free}</td>\r\n                                            <td>{item.tax}</td>\r\n                                            <td>{item.discountValue} {item.discount_type}</td>\r\n                                            <td>{item.total}</td>\r\n                                            <td>\r\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index + 1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>}\r\n                    <div>\r\n                        <div>\r\n                            taxabale amount:- {taxableAmount && taxableAmount}\r\n                        </div>\r\n                        <div>\r\n                            discount amount:- {discountAmount && discountAmount}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\r\n                        <div class=\"form-group col-md-5\">\r\n                            <label for=\"exampleFormControlTextarea1\">Remarks</label>\r\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\r\n                        </div>\r\n                        <div className='col-md-6'>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input type=\"text\" value={totalValue} readOnly class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            {discountType == 'Bill' && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\r\n                                <div class=\"pr-0 col-md-8 row\">\r\n                                    <div className=\"pr-0 col-5\">\r\n                                        <input class=\"form-control\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"px-0 col-7\">\r\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n\r\n                            {discountType == 'Both' && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\r\n                                <div class=\"pr-0 col-md-8 row\">\r\n                                    <div className=\"pr-0 col-5\">\r\n                                        <input class=\"form-control\" type=\"text\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"px-0 col-7\">\r\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Final Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input readOnly value={finalAmount} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Round Off Total</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input readOnly value={roundOffTotal} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Paid Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input value={paidAmount} onChange={e => setPaidAmount(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            {paidAmount > 0 && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Payment Method</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <select value={paymentMethod} onChange={e => setPaymentMethod(e.target.value)} id=\"input-party\" class=\"form-control\" required>\r\n                                        <option value=\"\">Select payment mode</option>\r\n                                        <option value=\"cash\">Cash</option>\r\n                                        <option value=\"bank\">Bank</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>}\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Remain Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input type=\"text\" value={remainAmount} readOnly class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\r\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\r\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\r\n                    <button type=\"button\" onClick={() => finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\r\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}