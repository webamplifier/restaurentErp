{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","assets/images_manual/add.svg","screens/Purchase Entry/Purchase/create.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Create","useHistory","React","useContext","userContext","user","setLoad","useState","invoiceNo","setInvoiceNo","purchaseDate","setPurchaseDate","currentParty","setCurrentParty","discountType","setDiscountType","GST","currentGst","setCurrentGst","currentProduct","setCurrentProduct","currentUnit","setCurrentUnit","costPerUnit","setCostPerUnit","qty","setQty","freeQty","setFreeQty","currentDiscountCriteria","setCurrentDiscountCriteria","discountValue","setDiscountValue","itemDescription","setItemDescription","remarks","setRemarks","allProducts","setAllProducts","allParty","setAllParty","allItems","setAllItems","finalAmount","roundOffTotal","remainAmount","discount_amount_final","amount_after_discount_final","finalDiscountCriteria","setFinalDiscountCriteria","finalDiscountValue","setFinalDiscountValue","paidAmount","setPaidAmount","paymentMethod","setPaymentMethod","totalValue","setTotalValue","taxableAmount","setTaxableAmount","discountAmount","setDiscountAmount","currentEditItem","setCurrentEditItem","perItemAmount","amount_before_tax_item","amount_after_tax_item","tax_amount_item","amount_before_discount","amount_after_discount","discount_amount","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","party_list","map","item","value","id","label","name","toast","error","message","product_list","product_name","type","fetchData","fetchProd","parseFloat","Math","round","className","class","for","onChange","e","target","required","options","checked","onClick","placeholder","htmlFor","readOnly","new_item_dict","description","unit","cost_per_unit","free","tax","discount_type","total","new_list_edit","index","parseInt","push","taxable_amount","new_item_list","handleSubmitItem","style","cursor","src","plus","alt","length","scope","index_value","handleEdit","aria-hidden","new_item","handleDelete","rows","window","location","reload","submitPurchase","body","formData","header","final","final_array","FormData","append","JSON","stringify","finalSubmit"],"mappings":"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","file":"static/js/26.6901751a.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import React from 'react'\r\nimport plus from '../../../assets/images_manual/add.svg'\r\nimport Select from 'react-select';\r\nimport { url, GST } from 'src/helpers/helpers';\r\nimport { userContext } from '../../../context/UserContext'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport default function Create() {\r\n    const history = useHistory();\r\n    const { user,setLoad } = React.useContext(userContext);\r\n    const [invoiceNo, setInvoiceNo] = React.useState('');\r\n    const [purchaseDate, setPurchaseDate] = React.useState('');\r\n    const [currentParty, setCurrentParty] = React.useState('');\r\n    const [creditPeriod, setCreditPeriod] = React.useState('');\r\n    const [currentLos, setCurrentLos] = React.useState('');\r\n    const [discountType, setDiscountType] = React.useState('None');\r\n    const [currentGst, setCurrentGst] = React.useState(GST[0]);\r\n    const [currentProduct, setCurrentProduct] = React.useState('');\r\n    const [currentUnit, setCurrentUnit] = React.useState('');\r\n    const [costPerUnit, setCostPerUnit] = React.useState(0);\r\n    const [qty, setQty] = React.useState(0);\r\n    const [freeQty, setFreeQty] = React.useState(0);\r\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\r\n    const [discountValue, setDiscountValue] = React.useState(0);\r\n    const [itemDescription, setItemDescription] = React.useState('');\r\n    const [remarks, setRemarks] = React.useState('');\r\n\r\n\r\n    const [allProducts, setAllProducts] = React.useState([]);\r\n    const [allParty, setAllParty] = React.useState([]);\r\n    const [allStates, setAllStates] = React.useState([]);\r\n    const [unitOptions, setUnitOptions] = React.useState([]);\r\n    const [allItems, setAllItems] = React.useState([]);\r\n\r\n    //final related variables and states\r\n    let finalAmount = 0;\r\n    let roundOffTotal = 0;\r\n    let remainAmount = 0;\r\n    let discount_amount_final = 0;\r\n    let amount_before_discount_final = 0;\r\n    let amount_after_discount_final = 0;\r\n\r\n\r\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\r\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\r\n    const [paidAmount, setPaidAmount] = React.useState(0);\r\n    const [paymentMethod, setPaymentMethod] = React.useState('cash');\r\n    const [totalValue, setTotalValue] = React.useState(0);\r\n    const [taxableAmount,setTaxableAmount] = React.useState(0);\r\n    const [discountAmount,setDiscountAmount] = React.useState(0);\r\n\r\n    //edit related states\r\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\r\n\r\n    //item based variables\r\n    let perItemAmount = 0;\r\n    let amount_before_tax_item = 0;\r\n    let amount_after_tax_item = 0;\r\n    let tax_amount_item = 0;\r\n    let amount_before_discount = 0;\r\n    let amount_after_discount = 0;\r\n    let discount_amount = 0;\r\n\r\n    React.useEffect(() => {\r\n        setLoad(true)\r\n        async function fetchData() {\r\n            const response = await fetch(url + 'partylist', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                }\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status === 200) {\r\n                    setAllParty(data?.party_list.map(item => {\r\n                        return {\r\n                            value: item.id,\r\n                            label: item.name\r\n                        }\r\n                    }))\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n\r\n\r\n        // products grab\r\n        async function fetchProd() {\r\n            \r\n            const response = await fetch(url + 'productlist', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                }\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status === 200) {\r\n                    setAllProducts(data?.product_list?.map(item=>{\r\n                        return {\r\n                            value : item.id,\r\n                            label : item.product_name,\r\n                            type : item.type\r\n                        }\r\n                    }))\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchProd();\r\n    }, [])\r\n\r\n\r\n    const calculateTotal = () => {\r\n        if (costPerUnit > 0 && qty > 0 && currentGst) {\r\n            amount_before_tax_item = parseFloat(costPerUnit) * parseFloat(qty); //amount before tax\r\n            tax_amount_item = (amount_before_tax_item / 100) * parseFloat(currentGst) // tax amount\r\n            amount_after_tax_item = amount_before_tax_item + tax_amount_item; // amount after adding tax amount + amount before tax\r\n            perItemAmount = amount_after_tax_item\r\n\r\n            if (discountType == 'Item' || discountType == 'Both') {\r\n                amount_before_discount = amount_after_tax_item;\r\n                if (currentDiscountCriteria == 'percent') {\r\n                    discount_amount = (parseFloat(amount_before_discount) / 100) * parseFloat(discountValue)\r\n                    amount_after_discount = amount_before_discount - discount_amount;\r\n                    perItemAmount = amount_after_discount;\r\n                }\r\n\r\n                if (currentDiscountCriteria == 'amount') {\r\n                    discount_amount = parseFloat(discountValue);\r\n                    amount_after_discount = amount_before_discount - discount_amount;\r\n                    perItemAmount = amount_after_discount;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateTotal()\r\n\r\n    const calculateFinalPrice = () => {\r\n        if (totalValue > 0) {\r\n            if (discountType == 'Bill' || discountType == 'Both') {\r\n                if (finalDiscountCriteria == 'percent') {\r\n                    discount_amount_final = totalValue / 100 * parseFloat(finalDiscountValue);\r\n                    amount_before_discount_final = totalValue;\r\n                    amount_after_discount_final = totalValue - discount_amount_final;\r\n                }\r\n\r\n                if (finalDiscountCriteria == 'amount') {\r\n                    discount_amount_final = parseFloat(finalDiscountValue);\r\n                    amount_before_discount_final = totalValue;\r\n                    amount_after_discount_final = totalValue - discount_amount_final;\r\n                }\r\n                finalAmount = amount_after_discount_final;\r\n                roundOffTotal = Math.round(amount_after_discount_final);\r\n                remainAmount = roundOffTotal - parseFloat(paidAmount);\r\n            } else {\r\n                finalAmount = totalValue\r\n                roundOffTotal = Math.round(finalAmount);\r\n                remainAmount = roundOffTotal - parseFloat(paidAmount);\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateFinalPrice()\r\n\r\n    const handleSubmitItem = () => {\r\n        if (invoiceNo && purchaseDate && currentParty && discountType && currentProduct && costPerUnit && qty && currentGst) {\r\n            let new_item_dict = {\r\n                item: currentProduct,\r\n                description: itemDescription,\r\n                unit: currentUnit,\r\n                cost_per_unit: costPerUnit,\r\n                qty: qty,\r\n                free: freeQty,\r\n                tax: currentGst,\r\n                discount_type: currentDiscountCriteria,\r\n                discountValue,\r\n                total: perItemAmount,\r\n                amount_before_tax_item,\r\n                tax_amount_item,\r\n                amount_after_tax_item,\r\n                amount_before_discount,\r\n                discount_amount,\r\n                amount_after_discount\r\n            };\r\n\r\n            \r\n\r\n            if (currentEditItem) {\r\n                setCurrentEditItem('')\r\n                let new_list_edit = []\r\n                allItems.map((item, index) => {\r\n                    if (index == parseInt(currentEditItem)-1) {\r\n                        \r\n                        new_list_edit.push(new_item_dict)\r\n                    } else {\r\n                        \r\n                        new_list_edit.push(item)\r\n                    }\r\n                })\r\n                let taxable_amount = 0;\r\n                let total = 0;\r\n                let discount_amount = 0;\r\n                new_list_edit.map(item=>{\r\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                    total = parseFloat(total) + parseFloat(item.total);\r\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                })\r\n                setTaxableAmount(taxable_amount);\r\n                setTotalValue(total);\r\n                setDiscountAmount(discount_amount);\r\n                setAllItems(new_list_edit);\r\n            } else {\r\n                let new_item_list = [...allItems, new_item_dict];\r\n\r\n                let taxable_amount = 0;\r\n                let total = 0;\r\n                let discount_amount = 0;\r\n                new_item_list.map(item=>{\r\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                    total = parseFloat(total) + parseFloat(item.total);\r\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                })\r\n                setTaxableAmount(taxable_amount);\r\n                setDiscountAmount(discount_amount);\r\n                setTotalValue(total);\r\n\r\n                setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\r\n                setAllItems(new_item_list);\r\n            }\r\n\r\n\r\n\r\n            setCurrentProduct('');\r\n            setCostPerUnit(0);\r\n            setCurrentUnit('');\r\n            setCostPerUnit(0);\r\n            setQty(0);\r\n            setFreeQty(0);\r\n            setCurrentGst('');\r\n            setCurrentDiscountCriteria('');\r\n            setDiscountValue(0);\r\n            setItemDescription('');\r\n            perItemAmount = 0;\r\n\r\n            amount_before_tax_item = 0;\r\n            amount_after_tax_item = 0;\r\n            tax_amount_item = 0;\r\n            amount_before_discount = 0;\r\n            amount_after_discount = 0;\r\n            discount_amount = 0;\r\n\r\n        } else {\r\n            toast.error('Fill all fields having *')\r\n        }\r\n    }\r\n\r\n    const finalSubmit = () => {\r\n        if (invoiceNo && purchaseDate && currentParty && allItems.length > 0 && totalValue){\r\n            setLoad(true)\r\n            let header = {\r\n                invoiceNo : invoiceNo,\r\n                purchaseDate : purchaseDate,\r\n                currentParty : currentParty,\r\n                discountType : discountType\r\n            }\r\n            let final = {\r\n                totalValue : totalValue,\r\n                finalAmount : finalAmount,\r\n                roundOffTotal : roundOffTotal,\r\n                paidAmount : paidAmount,\r\n                remainAmount : remainAmount,\r\n                finalDiscountValue : finalDiscountValue,\r\n                finalDiscountCriteria : finalDiscountCriteria,\r\n                remarks : remarks,\r\n                paymentMethod : paymentMethod,\r\n                taxableAmount : taxableAmount,\r\n                discountAmount : discountAmount\r\n            }\r\n\r\n            let final_array = [];\r\n\r\n            final_array.push(header);\r\n            final_array.push(final);\r\n\r\n            const formData = new FormData();\r\n            formData.append('final_array',JSON.stringify(final_array));\r\n            formData.append('allItems',JSON.stringify(allItems));\r\n\r\n            async function submitPurchase(){\r\n                const response = await fetch(url + 'create/purchase',{\r\n                    method : 'POST',\r\n                    headers : {\r\n                        'Authorization' : user.token\r\n                    },\r\n                    body : formData\r\n                });\r\n                if (response.ok == true){\r\n                    const data = await response.json();\r\n                    setLoad(false)\r\n                    if (data.status == 200){\r\n                        window.location.reload();\r\n                    }else{\r\n                        toast.error(data.message);\r\n                    }\r\n                }\r\n            }\r\n\r\n            submitPurchase()\r\n        }else{\r\n            toast.error('Please fill the data with *');\r\n        }\r\n    }\r\n\r\n    const handleEdit = (item, index_value) => {\r\n        setCurrentEditItem(index_value);\r\n        setCurrentProduct(item.item);\r\n        setItemDescription(item.description)\r\n        setCostPerUnit(item.cost_per_unit);\r\n        setQty(item.qty);\r\n        setFreeQty(item.free);\r\n        setCurrentGst(item.tax);\r\n        setCurrentDiscountCriteria(item.discount_type);\r\n        setDiscountValue(item.discountValue);\r\n        perItemAmount = item.total;\r\n    }\r\n\r\n    // if (allItems.length > 0) {\r\n\r\n    // }\r\n\r\n    const handleDelete = (index_value) => {\r\n        const new_item = [];\r\n        allItems.map((item, index) => {\r\n            if (index != index_value) {\r\n                new_item.push(item)\r\n            }\r\n        })\r\n        setAllItems(new_item);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container full-size-create-page-main-section\">\r\n            <ToastContainer />\r\n            <form>\r\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\r\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\r\n                        <div class=\"form-group col-md-3\">\r\n                            <label for=\"invoice-number\">Invoice No.<span className='required-label'>*</span></label>\r\n                            <input value={invoiceNo} onChange={e => setInvoiceNo(e.target.value)} type=\"text\" class=\"form-control\" id=\"invoice-number\" required />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"date\">Purchase Date<span className='required-label'>*</span></label>\r\n                            <input value={purchaseDate} onChange={e => setPurchaseDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" required />\r\n                        </div>\r\n                        <div class=\"form-group col-md-5\">\r\n                                <label for=\"input-party\">Party<span className='required-label'>*</span></label>\r\n                                <Select options={allParty} value={currentParty} onChange={setCurrentParty} />\r\n                        </div>\r\n                        <div class=\"form-group my-md-3 col-md-4\">\r\n                            <div className=\"text-center mb-2 font-weight-bold\">\r\n                                <label for=\"input-party\">Discount Type<span className='required-label'>*</span></label>\r\n                            </div>\r\n                            <div className='row px-3'>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input checked={discountType == 'None' && true} onClick={() => setDiscountType('None')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck1\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n                                        None\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input onClick={() => setDiscountType('Item')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck2\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck2\">\r\n                                        Item\r\n                                </label>\r\n                                </div>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input onClick={() => setDiscountType('Bill')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\r\n                                        Bill\r\n                                </label>\r\n                                </div>\r\n                                <div class=\"form-check col-sm-3\">\r\n                                    <input onClick={() => setDiscountType('Both')} class=\"form-check-input\" name=\"discount\" type=\"radio\" value=\"\" id=\"defaultCheck3\" />\r\n                                    <label class=\"form-check-label\" for=\"defaultCheck3\">\r\n                                        Both\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"my-4 form-row\">\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\r\n                            <Select options={allProducts} value={currentProduct} onChange={setCurrentProduct} />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Item Description</label>\r\n                            <textarea value={itemDescription} onChange={e => setItemDescription(e.target.value)} class=\"form-control\"></textarea>\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Cost/Unit<span className='required-label'>*</span></label>\r\n                            <input value={costPerUnit} onChange={(e) => setCostPerUnit(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Quantity<span className='required-label'>*</span></label>\r\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Free<span className='required-label'>*</span></label>\r\n                            <input value={freeQty} onChange={e => setFreeQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Tax%<span className='required-label'>*</span></label>\r\n                            \r\n                            <select className='form-control' placeholder='Select tax value' value={currentGst} onChange={e=>setCurrentGst(e.target.value)}>\r\n                                {GST.map(item=><option value={item}>{item}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        {discountType == 'Item' &&\r\n                            <div className='form-group col-md-4'>\r\n                                <label htmlFor=\"\">Discount</label>\r\n                                <div className='m-0 p-0 col-12 row'>\r\n                                    <div className=\"px-0 col-5\">\r\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"p-0 col-7\">\r\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {discountType == 'Both' &&\r\n                            <div className='form-group col-md-4'>\r\n                                <label htmlFor=\"\">Discount</label>\r\n                                <div className='m-0 p-0 col-12 row'>\r\n                                    <div className=\"px-0 col-5\">\r\n                                        <input value={discountValue} onChange={e => setDiscountValue(e.target.value)} class=\"form-control\" type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"p-0 col-7\">\r\n                                        <select value={currentDiscountCriteria} onChange={e => setCurrentDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div class=\"form-group col-md-4 row\">\r\n                            <div class=\"form-group col-9\">\r\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\r\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\r\n                            </div>\r\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\r\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    {allItems.length > 0 && <div className='my-table-responsive'>\r\n                        <table class=\"table mt-4\">\r\n                            <thead class=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Items</th>\r\n                                    <th scope=\"col\">Description</th>\r\n                                    <th scope=\"col\">Cost/Unit</th>\r\n                                    <th scope=\"col\">Quantity</th>\r\n                                    <th scope=\"col\">Free</th>\r\n                                    <th scope=\"col\">Tax%</th>\r\n                                    <th>Discount</th>\r\n\r\n                                    <th scope=\"col\">Total</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className='table-borderless'>\r\n                                {allItems.map((item, index) => {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td>\r\n                                                {item.item.label}\r\n                                            </td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>{item.cost_per_unit}</td>\r\n                                            <td>{item.qty}</td>\r\n                                            <td>{item.free}</td>\r\n                                            <td>{item.tax}</td>\r\n                                            <td>{item.discountValue} {item.discount_type}</td>\r\n                                            <td>{item.total}</td>\r\n                                            <td>\r\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index+1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>}\r\n                    <div>\r\n                        <div>\r\n                            taxabale amount:- {taxableAmount && taxableAmount}\r\n                        </div>\r\n                        <div>\r\n                            discount amount:- {discountAmount && discountAmount}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\r\n                        <div class=\"form-group col-md-5\">\r\n                            <label for=\"exampleFormControlTextarea1\">Remarks</label>\r\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\r\n                        </div>\r\n                        <div className='col-md-6'>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input type=\"text\" value={totalValue} readOnly class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            {discountType == 'Bill' && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\r\n                                <div class=\"pr-0 col-md-8 row\">\r\n                                    <div className=\"pr-0 col-5\">\r\n                                        <input class=\"form-control\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} type=\"text\" name=\"\" id=\"\" />\r\n                                    </div>\r\n                                    <div className=\"px-0 col-7\">\r\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n\r\n                            {discountType == 'Both' && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Discount</label>\r\n                                <div class=\"pr-0 col-md-8 row\">\r\n                                    <div className=\"pr-0 col-5\">\r\n                                        <input class=\"form-control\" type=\"text\" value={finalDiscountValue} onChange={e => setFinalDiscountValue(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"px-0 col-7\">\r\n                                        <select value={finalDiscountCriteria} onChange={e => setFinalDiscountCriteria(e.target.value)} class=\"form-control\" required>\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value='percent'>Percent</option>\r\n                                            <option value='amount'>Amount</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Final Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input readOnly value={finalAmount} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Round Off Total</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input readOnly value={roundOffTotal} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Paid Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input value={paidAmount} onChange={e => setPaidAmount(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            {paidAmount > 0 && <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Payment Method</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <select value={paymentMethod} onChange={e => setPaymentMethod(e.target.value)} id=\"input-party\" class=\"form-control\" required>\r\n                                        <option value=\"\">Select payment mode</option>\r\n                                        <option value=\"cash\">Cash</option>\r\n                                        <option value=\"bank\">Bank</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>}\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Remain Amount</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input type=\"text\" value={remainAmount} readOnly class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\r\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\r\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\r\n                    <button type=\"button\" onClick={()=>finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\r\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}