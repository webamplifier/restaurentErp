{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","assets/images_manual/add.svg","screens/Expense/create.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Create","useHistory","React","useContext","userContext","user","setLoad","useState","invoiceNo","purchaseDate","setPurchaseDate","currentParty","setCurrentParty","discountType","GST","setCurrentGst","currentProduct","setCurrentProduct","setCurrentUnit","costPerUnit","setCostPerUnit","qty","setQty","setFreeQty","setCurrentDiscountCriteria","setDiscountValue","itemDescription","setItemDescription","remarks","setRemarks","setAllProducts","setAllParty","allItems","setAllItems","roundOffTotal","finalDiscountCriteria","finalDiscountValue","paidAmount","paymentMethod","totalValue","setTotalValue","taxableAmount","setTaxableAmount","discountAmount","setDiscountAmount","currentEditItem","setCurrentEditItem","perItemAmount","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","party_list","map","item","value","id","label","name","toast","error","message","product_list","product_name","type","fetchData","fetchProd","parseFloat","Math","round","className","class","for","onChange","e","target","required","readOnly","onClick","new_item_dict","description","cost_per_unit","total","new_list_edit","index","parseInt","push","taxable_amount","discount_amount","tax_amount_item","new_item_list","handleSubmitItem","style","cursor","src","plus","alt","length","scope","index_value","handleEdit","aria-hidden","new_item","handleDelete","rows","window","location","reload","submitPurchase","body","formData","header","final","finalAmount","remainAmount","final_array","FormData","append","JSON","stringify","finalSubmit"],"mappings":"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","file":"static/js/20.484d5b08.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/add.b7874215.svg\";","import React from 'react'\r\nimport plus from '../../assets/images_manual/add.svg'\r\nimport Select from 'react-select';\r\nimport { url, GST } from 'src/helpers/helpers';\r\nimport { userContext } from '../../context/UserContext'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport default function Create() {\r\n    const history = useHistory();\r\n    const { user,setLoad } = React.useContext(userContext);\r\n    const [invoiceNo, setInvoiceNo] = React.useState('');\r\n    const [purchaseDate, setPurchaseDate] = React.useState('');\r\n    const [currentParty, setCurrentParty] = React.useState('');\r\n    const [creditPeriod, setCreditPeriod] = React.useState('');\r\n    const [currentLos, setCurrentLos] = React.useState('');\r\n    const [discountType, setDiscountType] = React.useState('None');\r\n    const [currentGst, setCurrentGst] = React.useState(GST[0]);\r\n    const [currentProduct, setCurrentProduct] = React.useState('');\r\n    const [currentUnit, setCurrentUnit] = React.useState('');\r\n    const [costPerUnit, setCostPerUnit] = React.useState(0);\r\n    const [qty, setQty] = React.useState(0);\r\n    const [freeQty, setFreeQty] = React.useState(0);\r\n    const [currentDiscountCriteria, setCurrentDiscountCriteria] = React.useState('percent');\r\n    const [discountValue, setDiscountValue] = React.useState(0);\r\n    const [itemDescription, setItemDescription] = React.useState('');\r\n    const [remarks, setRemarks] = React.useState('');\r\n\r\n\r\n    const [allProducts, setAllProducts] = React.useState([]);\r\n    const [allParty, setAllParty] = React.useState([]);\r\n    const [allStates, setAllStates] = React.useState([]);\r\n    const [unitOptions, setUnitOptions] = React.useState([]);\r\n    const [allItems, setAllItems] = React.useState([]);\r\n\r\n    //final related variables and states\r\n    let finalAmount = 0;\r\n    let roundOffTotal = 0;\r\n    let remainAmount = 0;\r\n    let discount_amount_final = 0;\r\n    let amount_before_discount_final = 0;\r\n    let amount_after_discount_final = 0;\r\n\r\n\r\n    const [finalDiscountCriteria, setFinalDiscountCriteria] = React.useState('percent');\r\n    const [finalDiscountValue, setFinalDiscountValue] = React.useState(0);\r\n    const [paidAmount, setPaidAmount] = React.useState(0);\r\n    const [paymentMethod, setPaymentMethod] = React.useState('cash');\r\n    const [totalValue, setTotalValue] = React.useState(0);\r\n    const [taxableAmount,setTaxableAmount] = React.useState(0);\r\n    const [discountAmount,setDiscountAmount] = React.useState(0);\r\n\r\n    //edit related states\r\n    const [currentEditItem, setCurrentEditItem] = React.useState('');\r\n\r\n    //item based variables\r\n    let perItemAmount = 0;\r\n    let amount_before_tax_item = 0;\r\n    let amount_after_tax_item = 0;\r\n    let tax_amount_item = 0;\r\n    let amount_before_discount = 0;\r\n    let amount_after_discount = 0;\r\n    let discount_amount = 0;\r\n\r\n    React.useEffect(() => {\r\n        setLoad(true)\r\n        async function fetchData() {\r\n            const response = await fetch(url + 'partylist', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                }\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status === 200) {\r\n                    setAllParty(data?.party_list.map(item => {\r\n                        return {\r\n                            value: item.id,\r\n                            label: item.name\r\n                        }\r\n                    }))\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n\r\n\r\n        // products grab\r\n        async function fetchProd() {\r\n            setLoad(true)\r\n            const response = await fetch(url + 'productlist', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                }\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status === 200) {\r\n                    setAllProducts(data?.product_list?.map(item=>{\r\n                        return {\r\n                            value : item.id,\r\n                            label : item.product_name,\r\n                            type : item.type\r\n                        }\r\n                    }))\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchProd();\r\n    }, [])\r\n\r\n\r\n    const calculateTotal = () => {\r\n        if (costPerUnit > 0 && qty > 0) {\r\n            perItemAmount = parseFloat(costPerUnit) * parseFloat(qty);\r\n        }\r\n    }\r\n\r\n    calculateTotal()\r\n\r\n    const calculateFinalPrice = () => {\r\n        if (totalValue > 0) {\r\n            roundOffTotal = Math.round(totalValue)\r\n        }\r\n    }\r\n\r\n    calculateFinalPrice()\r\n\r\n    const handleSubmitItem = () => {\r\n        if (purchaseDate && currentParty && currentProduct &&costPerUnit && qty) {\r\n            let new_item_dict = {\r\n                item: currentProduct,\r\n                description: itemDescription,\r\n                cost_per_unit: costPerUnit,\r\n                qty: qty,\r\n                total: perItemAmount,\r\n            };\r\n\r\n            \r\n\r\n            if (currentEditItem) {\r\n                setCurrentEditItem('')\r\n                let new_list_edit = []\r\n                allItems.map((item, index) => {\r\n                    if (index == parseInt(currentEditItem)-1) {\r\n                        \r\n                        new_list_edit.push(new_item_dict)\r\n                    } else {\r\n                        \r\n                        new_list_edit.push(item)\r\n                    }\r\n                })\r\n                let taxable_amount = 0;\r\n                let total = 0;\r\n                let discount_amount = 0;\r\n                new_list_edit.map(item=>{\r\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                    total = parseFloat(total) + parseFloat(item.total);\r\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                })\r\n                setTaxableAmount(taxable_amount);\r\n                setTotalValue(total);\r\n                setDiscountAmount(discount_amount);\r\n                setAllItems(new_list_edit);\r\n            } else {\r\n                let new_item_list = [...allItems, new_item_dict];\r\n\r\n                let taxable_amount = 0;\r\n                let total = 0;\r\n                let discount_amount = 0;\r\n                new_item_list.map(item=>{\r\n                    taxable_amount = parseFloat(taxable_amount) + parseFloat(item.tax_amount_item);\r\n                    total = parseFloat(total) + parseFloat(item.total);\r\n                    discount_amount = parseFloat(discount_amount) + parseFloat(item.discount_amount)\r\n                })\r\n                setTaxableAmount(taxable_amount);\r\n                setDiscountAmount(discount_amount);\r\n                setTotalValue(total);\r\n\r\n                setTotalValue(parseFloat(totalValue) + parseFloat(perItemAmount))\r\n                setAllItems(new_item_list);\r\n            }\r\n\r\n\r\n\r\n            setCurrentProduct('');\r\n            setCostPerUnit(0);\r\n            setCurrentUnit('');\r\n            setCostPerUnit(0);\r\n            setQty(0);\r\n            setFreeQty(0);\r\n            setCurrentGst('');\r\n            setCurrentDiscountCriteria('');\r\n            setDiscountValue(0);\r\n            setItemDescription('');\r\n            perItemAmount = 0;\r\n\r\n            amount_before_tax_item = 0;\r\n            amount_after_tax_item = 0;\r\n            tax_amount_item = 0;\r\n            amount_before_discount = 0;\r\n            amount_after_discount = 0;\r\n            discount_amount = 0;\r\n\r\n        } else {\r\n            toast.error('Fill all fields having *')\r\n        }\r\n    }\r\n\r\n    const finalSubmit = () => {\r\n        if (purchaseDate && currentParty && allItems.length > 0 && totalValue){\r\n            setLoad(true)\r\n            let header = {\r\n                invoiceNo : invoiceNo,\r\n                purchaseDate : purchaseDate,\r\n                currentParty : currentParty,\r\n                discountType : discountType\r\n            }\r\n            let final = {\r\n                totalValue : totalValue,\r\n                finalAmount : finalAmount,\r\n                roundOffTotal : roundOffTotal,\r\n                paidAmount : paidAmount,\r\n                remainAmount : remainAmount,\r\n                finalDiscountValue : finalDiscountValue,\r\n                finalDiscountCriteria : finalDiscountCriteria,\r\n                remarks : remarks,\r\n                paymentMethod : paymentMethod,\r\n                taxableAmount : taxableAmount,\r\n                discountAmount : discountAmount\r\n            }\r\n\r\n            let final_array = [];\r\n\r\n            final_array.push(header);\r\n            final_array.push(final);\r\n\r\n            const formData = new FormData();\r\n            formData.append('final_array',JSON.stringify(final_array));\r\n            formData.append('allItems',JSON.stringify(allItems));\r\n\r\n            async function submitPurchase(){\r\n                const response = await fetch(url + 'create-expense',{\r\n                    method : 'POST',\r\n                    headers : {\r\n                        'Authorization' : user.token\r\n                    },\r\n                    body : formData\r\n                });\r\n                if (response.ok == true){\r\n                    const data = await response.json();\r\n                    setLoad(false)\r\n                    if (data.status == 200){\r\n                        window.location.reload();\r\n                    }else{\r\n                        toast.error(data.message);\r\n                    }\r\n                }\r\n            }\r\n\r\n            submitPurchase()\r\n        }else{\r\n            toast.error('Please fill the data with *');\r\n        }\r\n    }\r\n\r\n    const handleEdit = (item, index_value) => {\r\n        setCurrentEditItem(index_value);\r\n        setCurrentProduct(item.item);\r\n        setItemDescription(item.description)\r\n        setCostPerUnit(item.cost_per_unit);\r\n        setQty(item.qty);\r\n        perItemAmount = item.total;\r\n    }\r\n\r\n    // if (allItems.length > 0) {\r\n\r\n    // }\r\n\r\n    const handleDelete = (index_value) => {\r\n        const new_item = [];\r\n        allItems.map((item, index) => {\r\n            if (index != index_value) {\r\n                new_item.push(item)\r\n            }\r\n        })\r\n        setAllItems(new_item);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container full-size-create-page-main-section\">\r\n            <ToastContainer />\r\n            <form>\r\n                <div className='p-sm-5 px-md-3 create-form-field create-purchase-page'>\r\n                    <div class=\"py-4 px-2 form-row create-purchase-header\">\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"date\">Date<span className='required-label'>*</span></label>\r\n                            <input value={purchaseDate} onChange={e => setPurchaseDate(e.target.value)} type=\"date\" class=\"form-control\" id=\"date\" required />\r\n                        </div>\r\n                        <div class=\"form-group col-md-5\">\r\n                                <label for=\"input-party\">To<span className='required-label'>*</span></label>\r\n                                <input className=\"form-control\" value={currentParty} onChange={e=>setCurrentParty(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"my-4 form-row\">\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Item<span className='required-label'>*</span></label>\r\n                            <input value={currentProduct} onChange={e=>setCurrentProduct(e.target.value)} className=\"form-control\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Item Description</label>\r\n                            <textarea value={itemDescription} onChange={e => setItemDescription(e.target.value)} class=\"form-control\"></textarea>\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Cost/Unit<span className='required-label'>*</span></label>\r\n                            <input value={costPerUnit} onChange={(e) => setCostPerUnit(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"invoice-number\">Quantity<span className='required-label'>*</span></label>\r\n                            <input value={qty} onChange={e => setQty(e.target.value)} type=\"text\" class=\"form-control\" id=\"\" />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4 row\">\r\n                            <div class=\"form-group col-9\">\r\n                                <label for=\"invoice-number\">Total<span className='required-label'>*</span></label>\r\n                                <input value={perItemAmount} readOnly type=\"text\" class=\"form-control\" id=\"\" />\r\n                            </div>\r\n                            <div class=\"form-group col-3 p-0 purchase-create-mid-plus-img\">\r\n                                <img className='img-fluid' onClick={() => handleSubmitItem()} style={{ cursor: 'pointer' }} src={plus} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    {allItems.length > 0 && <div className='my-table-responsive'>\r\n                        <table class=\"table mt-4\">\r\n                            <thead class=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Items</th>\r\n                                    <th scope=\"col\">Description</th>\r\n                                    <th scope=\"col\">Cost/Unit</th>\r\n                                    <th scope=\"col\">Quantity</th>\r\n                                    <th scope=\"col\">Total</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className='table-borderless'>\r\n                                {allItems.map((item, index) => {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td>\r\n                                                {item.item}\r\n                                            </td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>{item.cost_per_unit}</td>\r\n                                            <td>{item.qty}</td>\r\n                                            <td>{item.total}</td>\r\n                                            <td>\r\n                                                <i style={{ cursor: 'pointer' }} onClick={() => handleEdit(item, index+1)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                                <i onClick={() => handleDelete(index)} style={{ cursor: \"pointer\" }} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>}\r\n                    <div className='row mt-5 justify-content-between purchase-create-footer'>\r\n                        <div class=\"form-group col-md-5\">\r\n                            <label for=\"exampleFormControlTextarea1\">Remarks</label>\r\n                            <textarea value={remarks} onChange={e => setRemarks(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\r\n                        </div>\r\n                        <div className='col-md-6'>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Total Value</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input type=\"text\" value={totalValue} readOnly class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            \r\n                            <div class=\"form-group row\">\r\n                                <label for=\"\" class=\"col-md-4 col-form-label\">Round Off Total</label>\r\n                                <div class=\"col-md-8\">\r\n                                    <input readOnly value={roundOffTotal} type=\"text\" class=\"form-control\" id=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\r\n                    <button type=\"button\" onClick={() => window.location.reload()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\r\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\r\n                    <button type=\"button\" onClick={()=>finalSubmit()} class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\r\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}