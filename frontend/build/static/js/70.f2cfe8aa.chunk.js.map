{"version":3,"sources":["components/InventoryAdjustModal.js","screens/Inventory/Index.js"],"names":["InventoryAdjustModal","props","showModal","setShowModal","adjustAmount","setAdjustAmount","submitAdjust","className","show","onClose","closeButton","htmlFor","type","value","onChange","e","target","onClick","Index","React","useContext","userContext","user","setLoad","useState","inventoryList","setInventoryList","id","setId","adjutAmount","useEffect","a","fetch","url","method","headers","token","response","ok","json","data","status","console","log","inventory_list","toast","error","message","fetchData","formData","FormData","body","respone","append","editData","xs","lg","items","fields","columnFilter","tableFilter","itemsPerPageSelect","itemsPerPage","hover","sorter","pagination","scopedSlots","item","index","product_name","total_qty","style","cursor","showModalFunc","class","aria-hidden"],"mappings":"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","file":"static/js/70.f2cfe8aa.chunk.js","sourcesContent":["import { CButton, CModal, CModalBody, CModalFooter, CModalHeader } from '@coreui/react'\r\nimport React from 'react'\r\n\r\n\r\nexport default function InventoryAdjustModal(props) {\r\n    const { showModal, setShowModal, adjustAmount,setAdjustAmount,submitAdjust } = props;\r\n\r\n    return (\r\n        <div className='delete_modal_box'>\r\n            <CModal\r\n                show={showModal}\r\n                onClose={setShowModal}\r\n            >\r\n                <CModalHeader closeButton>\r\n                    Adjust Inventory\r\n                </CModalHeader>\r\n                <CModalBody className='delete_modal_body'>\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\">Add/Subtract Quantity</label>\r\n                                <input type=\"text\" value={adjustAmount} onChange={e => setAdjustAmount(e.target.value)} className='form-control' />\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <button type='submit' onClick={()=>submitAdjust()} className='col-12 btn btn-secondary mb-5'>Submit</button>\r\n                </CModalBody>\r\n            </CModal>\r\n        </div>\r\n    )\r\n}\r\n","import {CCard, CCardBody, CCol, CDataTable } from '@coreui/react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { url } from 'src/helpers/helpers';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport { userContext } from '../../context/UserContext'\r\nimport InventoryAdjustModal from '../../components/InventoryAdjustModal';\r\n\r\nexport default function Index() {\r\n    const { user,setLoad } = React.useContext(userContext);\r\n    const fields = ['#', 'product_name', 'available_qty', 'action'];\r\n    const [inventoryList, setInventoryList] = React.useState([]);\r\n    const [showModal,setShowModal] = React.useState(false);\r\n    const [id,setId] = React.useState('');\r\n    const [adjutAmount,setAdjustAmount] = React.useState('');\r\n    \r\n    const showModalFunc = (id) => {\r\n        setId(id);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const submitAdjust = () => {\r\n        setLoad(true)\r\n        const formData = new FormData();\r\n        formData.append('new_qty',adjutAmount);\r\n        async function editData(){\r\n            \r\n            const respone = await fetch(url + 'edit/inventory/' + id,{\r\n                method : 'POST',\r\n                headers : {\r\n                    'Authorization' : user.token,\r\n                },\r\n                body : formData\r\n            })\r\n\r\n            if (respone.ok == true){\r\n                const data = await respone.json();\r\n                setLoad(false)\r\n                if (data.status == 200){\r\n                    setId('');\r\n                    setAdjustAmount('');\r\n                    setShowModal(false);\r\n                    async function fetchData() {\r\n                        const response = await fetch(url + 'inventoryList', {\r\n                            method: 'GET',\r\n                            headers: {\r\n                                'Authorization': user?.token\r\n                            }\r\n                        })\r\n            \r\n                        if (response.ok === true) {\r\n                            const data = await response.json();\r\n            \r\n                            if (data.status === 200) {\r\n                                setInventoryList(data.inventory_list);\r\n                            } else {\r\n                                toast.error(data.message);\r\n                            }\r\n                        }\r\n                    }\r\n            \r\n                    fetchData();\r\n                }else{\r\n                    toast.error(data.message)\r\n                }\r\n            }\r\n\r\n        }\r\n        editData();\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setLoad(true)\r\n        async function fetchData() {\r\n            const response = await fetch(url + 'inventoryList', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                }\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status === 200) {\r\n                    console.log('inventory',data)\r\n                    setInventoryList(data.inventory_list);\r\n                } else {\r\n                    toast.error(data.message);\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    return (\r\n        <section>\r\n            <ToastContainer />\r\n            <InventoryAdjustModal showModal={showModal} setShowModal={setShowModal} adjutAmount={adjutAmount} setAdjustAmount={setAdjustAmount} submitAdjust={submitAdjust} />\r\n            <CCol xs=\"12\" lg=\"12\">\r\n                <CCard>\r\n                    <CCardBody>\r\n                        <CDataTable\r\n                            items={inventoryList}\r\n                            fields={fields}\r\n                            columnFilter\r\n                            tableFilter\r\n                            itemsPerPageSelect\r\n                            itemsPerPage={5}\r\n                            hover\r\n                            sorter\r\n                            pagination\r\n                            scopedSlots={{\r\n                                '#' : (item,index) => (\r\n                                    <td>\r\n                                        {index + 1}\r\n                                    </td>\r\n                                ),\r\n                                'product_name' : (item) => (<td>{item.product_name}</td>),\r\n                                'available_qty' : (item) => (<td>{item.total_qty}</td>),\r\n                                'action': (item) => (\r\n                                    <td>\r\n                                        <i style={{cursor:'pointer'}} onClick={()=>showModalFunc(item.id)} class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                        {/* <i style={{ cursor: \"pointer\" }} onClick={() => showModal(item.id)} class=\"fa fa-trash\" aria-hidden=\"true\"></i> */}\r\n                                    </td>\r\n                                )\r\n\r\n                            }\r\n                            }\r\n                        />\r\n                    </CCardBody>\r\n                </CCard>\r\n            </CCol>\r\n        </section>\r\n    )\r\n}"],"sourceRoot":""}