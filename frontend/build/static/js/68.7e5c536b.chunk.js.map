{"version":3,"sources":["screens/Customer/Create.js"],"names":["Create","React","useContext","userContext","user","setLoad","useState","name","setName","email","setEmail","mobile","setMobile","companyName","setCompanyName","address","setAddress","className","onSubmit","e","a","formData","FormData","append","fetch","url","method","headers","token","body","response","ok","json","data","status","window","location","origin","toast","error","message","preventDefault","submitData","handleSubmit","class","for","required","value","onChange","target","type","id","rows","onClick","reload","aria-hidden"],"mappings":"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","file":"static/js/68.7e5c536b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { fetchContext } from '../../context/fetchContext'\r\nimport Select from 'react-select';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport { userContext } from '../../context/UserContext'\r\nimport { url } from 'src/helpers/helpers';\r\n\r\nexport default function Create() {\r\n    const { user,setLoad } = React.useContext(userContext);\r\n    const [name, setName] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [mobile, setMobile] = React.useState('');\r\n    const [companyName, setCompanyName] = React.useState('');\r\n    const [address, setAddress] = React.useState('');\r\n\r\n    const handleSubmit = e => {\r\n        setLoad(true)\r\n        e.preventDefault();\r\n\r\n        async function submitData() {\r\n            const formData = new FormData();\r\n            formData.append('name', name);\r\n            formData.append('email', email);\r\n            formData.append('mobile', mobile);\r\n            formData.append('address', address);\r\n            formData.append('company_name',companyName);\r\n\r\n            const response = await fetch(url + 'createclient', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': user?.token\r\n                },\r\n                body: formData\r\n            })\r\n\r\n            if (response.ok === true) {\r\n                const data = await response.json();\r\n                setLoad(false)\r\n                if (data.status === 200) {\r\n                    return window.location = window.location.origin + '/#/customerList'\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n            }\r\n        }\r\n        submitData();\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container create-page-main-section\">\r\n            <ToastContainer />\r\n            <form onSubmit={e => handleSubmit(e)}>\r\n                <div className='p-sm-5 create-form-field'>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Name:<span className='required-label'>*</span></label>\r\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\r\n                            <input required value={name} onChange={e => setName(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Email:</label>\r\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\r\n                            <input value={email} onChange={e => setEmail(e.target.value)} type=\"email\" class=\"form-control\" id=\"inputPassword\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Mobile No:</label>\r\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\r\n                            <input value={mobile} onChange={e => setMobile(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Company Name</label>\r\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\r\n                            <input value={companyName} onChange={e => setCompanyName(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\r\n                        </div>\r\n                    </div>\r\n                    \r\n\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm-2 col-form-label\" for=\"exampleFormControlTextarea1\">Address:</label>\r\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\r\n                            <textarea value={address} onChange={e => setAddress(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\r\n                    <button onClick={() => window.location.reload()} type=\"submit\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\r\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\r\n                    <button type=\"submit\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\r\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}